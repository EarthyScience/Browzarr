(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[974],{867:(e,t,r)=>{"use strict";r.d(t,{x:()=>o});var n=r(2207),a=r(6023),i=r(7430);let o=e=>{let[t,r]=(0,a.useState)(null),{setTimeSeries:o,setPlotDim:s,setDimCoords:l}=e.setters,{shape:u,ZarrDS:c,dimArrays:d,dimNames:m,dimUnits:h}=e.values;return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)("mesh",{scale:u,onClick:e=>{e.stopPropagation(),e.intersections.length>0&&function(e){let t=e.point,n=e.uv,a=e.normal;if(c){var u,p;c.GetTimeSeries({uv:n,normal:a}).then(e=>o(e));let e=a.toArray().map((e,t)=>Math.abs(e)>0?t:null).filter(e=>null!==e);s(2-e[0]);let t=(0,i.jT)({normal:a,uv:n}).map((e,t)=>e?d[t][Math.round(e*d[t].length)]:null),r=m.filter((e,r)=>null!==t[r]),f=h.filter((e,r)=>null!==t[r]);t=t.filter(e=>null!==e),l({first:{name:r[0],loc:null!=(u=t[0])?u:0,units:f[0]},second:{name:r[1],loc:null!=(p=t[1])?p:0,units:f[1]},plot:{units:h[2-e[0]]}})}r(t)}(e.intersections[0])},children:[(0,n.jsx)("boxGeometry",{args:[1,1,1]}),(0,n.jsx)("meshBasicMaterial",{transparent:!0,opacity:0})]}),t&&(0,n.jsxs)("mesh",{position:t,scale:.01,children:[(0,n.jsx)("boxGeometry",{}),(0,n.jsx)("meshBasicMaterial",{color:"#ff0000"})]})]})}},1143:()=>{},1253:(e,t,r)=>{"use strict";r.a(e,async(e,n)=>{try{r.d(t,{h:()=>h});var a=r(2207),i=r(6023),o=r(325),s=r(9591),l=r(9581),u=r(3861),c=r(7345),d=r(6067);r(5901);var m=e([d]);d=(m.then?(await m)():m)[0];let h=e=>{let{values:t}=e,{ZarrDS:r,cmap:n,canvasWidth:m,dimNames:h,valueScales:p}=t,[f,x]=(0,i.useState)(null),[v,g]=(0,i.useState)(!1),y=(0,i.useMemo)(()=>d.Ee.map(e=>({text:e,value:e})),[]);(0,i.useMemo)(()=>h.map(e=>({text:e,value:e})),[]);let w=(0,l.aF)("analysis"),b=(0,u.ap)({operation:"Mean",firstVar:"Default",secondVar:"Default",execute:!1,axis:0,active:!1},{title:"Analysis",container:null!=w?w:void 0,expanded:!1}),[S]=(0,u.Kr)(b,"active",{label:"Show Analysis",value:!1}),[D]=(0,u.Kr)(b,"firstVar",{label:"Variable 1",options:[{text:"Default",value:"Default"},...y],value:"Default"}),[j]=(0,u.Kr)(b,"secondVar",{label:"Variable 2",options:[{text:"Default",value:"Default"},...y],value:"Default"}),[A]=(0,u.Kr)(b,"operation",{label:"Operation",options:[{text:"Mean",value:"Mean"},{text:"Min",value:"Min"},{text:"Max",value:"Max"},{text:"StDev",value:"StDev"}],value:"Mean"}),[C]=(0,u.Kr)(b,"axis",{label:"Axis",options:[{text:"0",value:0},{text:"1",value:1},{text:"2",value:2}]});return(0,u.CZ)(b,{title:"Compute"},()=>g(e=>!e)),(0,i.useEffect)(()=>{"Default"!==D&&r.GetArray(D).then(e=>{x(e)})},[D]),(0,a.jsx)("div",{className:"analysis-canvas",style:{width:m},children:(0,a.jsxs)(o.Hl,{camera:{position:[0,0,50],zoom:5},orthographic:!0,children:[f&&(0,a.jsx)(s.A,{array:f,cmap:n,stateVars:{operation:A,axis:C,execute:v,active:S},valueScales:p}),(0,a.jsx)("axesHelper",{scale:10}),(0,a.jsx)(c.N,{enablePan:!0,enableRotate:!0})]})})};n()}catch(e){n(e)}})},3162:(e,t,r)=>{"use strict";r.d(t,{I:()=>u});var n=r(2207),a=r(3612),i=r(6023),o=r(7870),s=r(3861),l=r(9581);let u=e=>{let{textures:t}=e,{texture:r,colormap:u}=t,c=(0,l.aF)("plot-cloud"),d=(0,s.ap)({scalePoints:!1},{title:"Point cloud",container:null!=c?c:void 0,expanded:!1}),[m]=(0,s.jD)(d,{label:"Point Size",value:1,min:1,max:100,step:1}),[h]=(0,s.Kr)(d,"scalePoints",{label:"Scale Points By Value",value:!1}),[p]=(0,s.jD)(d,{label:"Scale Intensity",value:2,min:1,max:10,step:.2}),{data:f,width:x,height:v,depth:g}=(0,i.useMemo)(()=>r instanceof a.dYF?{data:r.image.data,width:r.image.width,height:r.image.height,depth:r.image.depth}:(console.warn("Provided texture is not a Data3DTexture"),{data:[],width:0,height:0,depth:0}),[r]),{positions:y,values:w}=(0,i.useMemo)(()=>{let e=[],t=[],r=x/v,n=g/v;n=n>10?10:n;for(let a=0;a<g;a++)for(let i=0;i<v;i++)for(let o=0;o<x;o++){let s=f[o+i*x+a*x*v]||0;if(s>0){let l=(o/(x-1)-.5)*r,u=i/(v-1)-.5,c=(a/(g-1)-.5)*n;e.push(2*l,2*u,2*c),t.push(s)}}return{positions:e,values:t}},[f,x,v,g]),b=(0,i.useMemo)(()=>{let e=new a.LoY;return e.setAttribute("position",new a.qtW(y,3)),e.setAttribute("value",new a.qtW(w,1)),e},[y,w]),S=new a.BKk({glslVersion:a.Wdf,uniforms:{pointSize:{value:m},cmap:{value:u},scalePoints:{value:h},scaleIntensity:{value:p}},vertexShader:o.UE,fragmentShader:o.F_,depthWrite:!0,transparent:!0,blending:a.NTi,side:a.$EB});return(0,n.jsx)("points",{geometry:b,material:S})}},4394:(e,t,r)=>{Promise.resolve().then(r.bind(r,5452))},4628:(e,t,r)=>{"use strict";r.d(t,{a:()=>d});var n=r(2207),a=r(3612),i=r(6023),o=r(5735),s=r(884),l=r(9581),u=r(3861);function c(e){let{points:t,pointSize:r,pointColor:o,pointSetters:l}=e,u=(0,i.useRef)(null),c=t.length,[d,m]=(0,i.useState)(!1),{setPointID:h,setPointLoc:p,setShowPointInfo:f}=l,[x,v]=(0,i.useState)(1),g=(0,i.useMemo)(()=>new a.Gu$(r),[r]),y=(0,i.useMemo)(()=>new a.V9B({color:o}),[o]);return(0,i.useEffect)(()=>{if(u.current){let e=new a.B69;for(let r=0;r<c;r++){let n=t[r].toArray();e.position.set(...n),e.scale.set(1/x,1/x,1/x),e.updateMatrix(),u.current.setMatrixAt(r,e.matrix)}u.current.instanceMatrix.needsUpdate=!0}},[t,x,g,y]),(0,s.C)(e=>{let{camera:t}=e;t.zoom!==x&&v(t.zoom)}),(0,n.jsx)(n.Fragment,{children:(0,n.jsx)("mesh",{onPointerEnter:function(e){if(u.current){let t=new a.B69,r=new a.kn4;u.current.getMatrixAt(e.instanceId,r);let n=new a.Pq0;n.setFromMatrixPosition(r),t.scale.set(3/x,3/x,3/x),t.position.copy(n),t.updateMatrix(),u.current.setMatrixAt(e.instanceId,t.matrix),u.current.instanceMatrix.needsUpdate=!0,m(e=>!e),h(e.instanceId),p([e.clientX,e.clientY]),f(!0)}},onPointerLeave:function(){if(u.current){let e=new a.B69,t=new a.kn4,r=new a.Pq0;for(let n=0;n<c;n++)u.current.getMatrixAt(n,t),r.setFromMatrixPosition(t),e.scale.set(1/x,1/x,1/x),e.position.copy(r),e.updateMatrix(),u.current.setMatrixAt(n,e.matrix);u.current.instanceMatrix.needsUpdate=!0,m(e=>!e),f(!1)}},children:(0,n.jsx)("instancedMesh",{ref:u,args:[g,y,c]})})})}let d=e=>{let{height:t,pointSetters:r,yScale:s,xScale:d}=e,[m,h]=(0,i.useState)(!1),p=(0,l.aF)("line-plot-pane"),f=(0,u.ap)({pointColor:"#777777",interpolation:"linear"},{title:"Line",container:null!=p?p:void 0,expanded:!0});(0,u.CZ)(f,{title:"".concat(m?"Hide":"Show"," Points")},()=>h(e=>!e));let[x]=(0,u.Kr)(f,"pointColor",{label:"Point Color",value:"#2d4967"}),[v]=(0,u.jD)(f,{label:"Point Size",value:5,min:1,max:20,step:1}),[g]=(0,u.Kr)(f,"interpolation",{label:"Line Interpolation",options:[{text:"Linear",value:"linear"},{text:"Curved",value:"curved"}]}),[y]=(0,u.jD)(f,{label:"Line Width",value:5,min:1,max:20,step:1}),{scaling:w,timeSeries:b}=(0,i.useContext)(o.N),{maxVal:S,minVal:D,colormap:j}=w,[A,C]=(0,i.useMemo)(()=>{if(!b||0===b.length)return[[new a.Pq0(0,0,0)],[0]];let e=window.innerWidth,r=window.innerHeight-t,n=function(e,t,r){let n=(t-e)/(r-1);return Array.from({length:r},(t,r)=>e+n*r)}(-e*d/2,e*d/2,b.length),i=b.map(e=>(e-D)/(S-D));return[i.map((e,t)=>new a.Pq0(n[t],(e-.5)*r*s,5)),i]},[b,g,t,s,d]),M=(0,i.useMemo)(()=>{if(!b||0===b.length)return null;if("curved"===g){let e=new a.B6O(A),t=new a.LoY().setFromPoints(e.getPoints(5*C.length-1));return t.setAttribute("normed",new a.qtW(C.flatMap(e=>[,,,,,].fill(e)),1)),t}{let e=new a.LoY().setFromPoints(A);return e.setAttribute("normed",new a.qtW(C,1)),e}},[A]),z=(0,i.useMemo)(()=>new a.BKk({glslVersion:a.Wdf,uniforms:{cmap:{value:j}},vertexShader:"\n                    varying float vNormed;\n                    attribute float normed;\n\n                    void main() {\n                        vNormed = normed;\n                        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n                    }\n                    ",fragmentShader:"\n                    out vec4 Color;\n                    uniform sampler2D cmap;\n                    varying float vNormed;\n\n                    void main() {\n                        vec4 texColor = texture(cmap, vec2(vNormed, 0.5));\n                        texColor.a = 2.;\n                        // Color = vec4(1.,0.0,0.,1.);\n                        Color = texColor;\n                    }\n                    ",linewidth:y,depthWrite:!1}),[y]);return b&&0!==b.length?(0,n.jsxs)("group",{children:[M&&(0,n.jsx)("primitive",{object:new a.N1A(M,z)}),m&&(0,n.jsx)(c,{points:A,pointSize:v,pointColor:x,pointSetters:r})]}):null}},5137:(e,t,r)=>{"use strict";r.a(e,async(e,n)=>{try{r.d(t,{IE:()=>s.I,Kl:()=>c.K,Nw:()=>u.N,_k:()=>a._,aW:()=>o.a,ht:()=>d.h,xP:()=>i.x,xn:()=>l.x});var a=r(7796),i=r(867),o=r(4628),s=r(3162),l=r(5551),u=r(9611),c=r(9806),d=r(1253),m=e([l,c,d]);[l,c,d]=m.then?(await m)():m,n()}catch(e){n(e)}})},5452:(e,t,r)=>{"use strict";r.a(e,async(e,n)=>{try{r.d(t,{default:()=>f});var a=r(2207),i=r(3612),o=r(6067),s=r(6023),l=r(5137),u=r(5861),c=r(9581),d=r(6233),m=r(3861),h=e([o,l]);function p(e){let{showLoading:t}=e;return(0,a.jsx)("div",{className:"messages",children:t&&(0,a.jsx)("div",{className:"loading",children:"Loading..."})})}[o,l]=h.then?(await h)():h,i.l2R.enabled=!0;let f=function(){let[e,t]=(0,s.useState)(!1),r=(0,s.useMemo)(()=>o.Ee.map(e=>({text:e,value:e})),[]),n=(0,s.useMemo)(()=>u.dl.map(e=>({text:e,value:e})),[]),h=(0,c.aF)("data-settings-pane"),f=(0,m.ap)({backgroundcolor:"#292b32",vName:"Default",plottype:"volume",cmap:"Spectral",flipCmap:!1},{title:"Data settings",container:null!=h?h:void 0,expanded:!1}),[x]=(0,m.Kr)(f,"backgroundcolor",{label:"bgcolor",value:"#292b32"}),[v]=(0,m.Kr)(f,"vName",{label:"Plot Variable",options:[{text:"Default",value:"Default"},...r],value:"Default"}),[g]=(0,m.Kr)(f,"plottype",{label:"Plot type",options:[{text:"volume",value:"volume"},{text:"point-cloud",value:"point-cloud"}],value:"point-cloud"}),[y]=(0,m.Kr)(f,"cmap",{label:"colormap",options:n,value:"Spectral"});(0,m.CZ)(f,{title:"Flip Colors"},()=>t(e=>!e));let[w,b]=(0,s.useState)(new i.Pq0(2,2,2)),[S,D]=(0,s.useState)({maxVal:1,minVal:-1}),[j,A]=(0,s.useState)((0,u.v6)()),[C,M]=(0,s.useState)([0]),[z,P]=(0,s.useState)(!1),[V,N]=(0,s.useState)(null),[F,U]=(0,s.useState)(null),[_,T]=(0,s.useState)([[0],[0],[0]]),[B,k]=(0,s.useState)(["default"]),[E,G]=(0,s.useState)(["Default"]),[R,I]=(0,s.useState)(),[O,W]=(0,s.useState)(0),Y=(0,s.useMemo)(()=>new o.Y5("https://s3.bgc-jena.mpg.de:9000/esdl-esdc-v3.0.2/esdc-16d-2.5deg-46x72x1440-3.0.2.zarr"),[]),[K,L]=(0,s.useState)(0),[q,H]=(0,s.useState)("Mean"),[J,X]=(0,s.useState)(!1),[Z,$]=(0,s.useState)(0);(0,s.useEffect)(()=>{$(Math.round(0*window.innerWidth))},[]),(0,s.useEffect)(()=>{A((0,u.v6)(j,y,1,"#000000",0,e))},[y,j,e]);let Q={values:{plotType:g,colormap:j,ZarrDS:Y,variable:v,shape:w,bgcolor:x,canvasWidth:Z},setters:{setShowLoading:P,setDataArray:U,setValueScales:D,setShape:b,setMetadata:N,setDimArrays:T,setDimNames:k,setDimUnits:G}},ee={coords:null!=R?R:{first:{name:"",loc:0,units:""},second:{name:"",loc:0,units:""},plot:{units:""}},plotDim:O,dimNames:B,dimUnits:E,dimArrays:_,plotUnits:V?V.units:"Default",yRange:[S.minVal,S.maxVal],timeSeries:C,scaling:{...S,colormap:j}},et={setters:{},values:{ZarrDS:Y,cmap:j,shape:w.toArray(),canvasWidth:Z,dimNames:B,valueScales:S}};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(c.t2,{canvasWidth:Z,setCanvasWidth:$}),(0,a.jsx)(p,{showLoading:z}),(0,a.jsx)(l.ht,{values:et.values}),(0,a.jsx)(l.Kl,{values:Q.values,setters:Q.setters,timeSeriesObj:{setters:{setTimeSeries:M,setPlotDim:W,setDimCoords:I},values:{ZarrDS:Y,shape:w,dimArrays:_,dimNames:B,dimUnits:E}}}),V&&(0,a.jsx)(c.OS,{data:V}),(0,a.jsx)(d.N.Provider,{value:ee,children:C.length>2&&(0,a.jsx)(l.xn,{})})]})};n()}catch(e){n(e)}})},5551:(e,t,r)=>{"use strict";r.a(e,async(e,n)=>{try{r.d(t,{x:()=>p});var a=r(2207),i=r(325),o=r(7430),s=r(5137),l=r(6023),u=r(6233),c=r(9581);r(1143);var d=e([s]);function m(e){let{pointID:t,pointLoc:r,showPointInfo:n}=e,{plotDim:i,dimArrays:s,timeSeries:c,dimNames:d,dimUnits:m,plotUnits:h}=(0,l.useContext)(u.N),p=c[t],f=s[i][t],[x,v]=r,[g,y]=(0,l.useState)(!1);return(0,l.useEffect)(()=>{if(!n){let e=setTimeout(()=>{y(!1)},100);return()=>clearTimeout(e)}y(!0)},[n]),(0,a.jsx)(a.Fragment,{children:g&&(0,a.jsxs)("div",{className:"point-info",style:{left:"".concat(x,"px"),top:"".concat(v,"px")},children:["".concat(p.toFixed(2)).concat(h),(0,a.jsx)("br",{}),"".concat(d[i],": ").concat((0,o.SB)(f,m[i]),"       \n        ")]})})}function h(){let{coords:e}=(0,l.useContext)(u.N),[t,r]=(0,l.useState)(!1),n=(0,l.useRef)([40,115]),i=(0,l.useRef)([40,115]),[s,c]=(0,l.useState)([40,115]);function d(e){if(t){let t=n.current[0]-e.clientX,r=n.current[1]-e.clientY,a=Math.max(i.current[0]-t,10),o=Math.max(i.current[1]+r,0);c([Math.min(a,window.innerWidth-100),Math.min(o,window.innerHeight-100)])}}function m(){r(!1)}return(0,l.useEffect)(()=>(t&&(document.addEventListener("mousemove",d),document.addEventListener("mouseup",m)),()=>{document.removeEventListener("mousemove",d),document.removeEventListener("mouseup",m)}),[t]),(0,a.jsx)(a.Fragment,{children:e&&"Default"!==e.first.name&&(0,a.jsxs)("div",{className:"plot-coords",style:{left:"".concat(s[0],"px"),bottom:"".concat(s[1],"px")},onPointerDown:function(e){n.current=[e.clientX,e.clientY],i.current=[...s],r(!0)},onPointerMove:d,onPointerUp:()=>r(!1),children:[(0,a.jsx)("b",{children:"".concat(e.first.name,": ")}),"".concat((0,o.SB)(e.first.loc,e.first.units)),(0,a.jsx)("br",{}),(0,a.jsx)("b",{children:"".concat(e.second.name,": ")}),"".concat((0,o.SB)(e.second.loc,e.second.units))]})})}function p(){let[e,t]=(0,l.useState)(0),[r,n]=(0,l.useState)([0,0]),[o,u]=(0,l.useState)(!1),[d,p]=(0,l.useState)(Math.round(window.innerHeight-.15*window.innerHeight)),[f,x]=(0,l.useState)(1),[v,g]=(0,l.useState)(1);return(0,l.useEffect)(()=>{document.documentElement.style.setProperty("--plot-height","".concat(d,"px"))},[d]),(0,a.jsxs)("div",{className:"plot-canvas",children:[(0,a.jsx)(m,{pointID:e,pointLoc:r,showPointInfo:o}),(0,a.jsx)(c.A,{height:d,setHeight:p}),(0,a.jsx)(c.gj,{scale:f,setScale:x}),(0,a.jsx)(c.LC,{scale:v,setScale:g}),(0,a.jsxs)(i.Hl,{orthographic:!0,camera:{position:[0,0,40]},frameloop:"demand",children:[(0,a.jsx)(s.aW,{height:d,pointSetters:{setPointID:t,setPointLoc:n,setShowPointInfo:u},yScale:f,xScale:v}),(0,a.jsx)(s.Nw,{height:d,yScale:f,xScale:v})]}),(0,a.jsx)(h,{})]})}s=(d.then?(await d)():d)[0],n()}catch(e){n(e)}})},5735:(e,t,r)=>{"use strict";r.d(t,{N:()=>i});var n=r(6023);let a={coords:{first:{name:"DefaultName1",loc:0,units:"meters"},second:{name:"DefaultName2",loc:1,units:"meters"},plot:{units:"pixels"}},plotDim:100,dimNames:["Default","Default","Default"],dimUnits:["Default","Default","Default"],dimArrays:[[0,1,2],[3,4,5]],plotUnits:"Default",yRange:[0,10],timeSeries:[1,2,3,4,5],scaling:{colormap:new(r(3612)).GYF,maxVal:100,minVal:0}},i=(0,n.createContext)(a)},5861:(e,t,r)=>{"use strict";r.d(t,{oW:()=>l,mt:()=>u,v6:()=>o,dl:()=>i});var n=r(3612),a=r(8562);let i=["viridis","plasma","inferno","magma","Accent","Blues","CMRmap","twilight","tab10","gist_earth","cividis","Spectral","gist_stern","gnuplot","gnuplot2","ocean","turbo","GnBu","afmhot","cubehelix","hot","spring","terrain","winter","Wistia"];function o(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Spectral",r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"#000000",o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,s=arguments.length>5&&void 0!==arguments[5]&&arguments[5],l=Array.from({length:255},(e,t)=>t/254),u=(l=s?l.reverse():l).map(e=>(0,a.md)(e,t,!1)),c=new Uint8Array((u.length+1)*4);for(let e=0;e<u.length;e++){let[t,n,a]=u[e];c[4*e]=t,c[4*e+1]=n,c[4*e+2]=a,c[4*e+3]=r}let d=function(e){let t=parseInt(e=e.replace(/^#/,""),16);return[t>>16&255,t>>8&255,255&t]}(i),m=4*u.length;if(c[m]=d[0],c[m+1]=d[1],c[m+2]=d[2],c[m+3]=o,e)return e.image.data.set(c),e.needsUpdate=!0,e;{let e=new n.GYF(c,u.length+1,1,n.GWd);return e.needsUpdate=!0,e}}function s(e){let t=e.shape,r=Array.from(e.data),[a,i,o]=t,s=r.reduce((e,t)=>isNaN(e)?t:isNaN(t)||e>t?e:t),l=r.reduce((e,t)=>isNaN(e)?t:isNaN(t)?e:e>t?t:e),u=new Uint8Array(r.map(e=>(e-l)/(s-l)).map(e=>isNaN(e)?255:254*e)),c=new n.dYF(u,o,i,a);return c.format=n.VT0,c.minFilter=n.hxR,c.magFilter=n.hxR,c.needsUpdate=!0,[c,{maxVal:s,minVal:l}]}function l(e){let t=e.shape,[r,a]=3==t.length?s(e):function(e){let t=e.shape,r=Array.from(e.data),a=t[0],i=t[1],o=r.reduce((e,t)=>isNaN(e)?t:isNaN(t)||e>t?e:t),s=r.reduce((e,t)=>isNaN(e)?t:isNaN(t)?e:e>t?t:e),l=new Uint8Array(r.map(e=>(e-s)/(o-s)).map(e=>255*e)),u=new n.GYF(l,a,i,n.VT0,n.OUM);return u.needsUpdate=!0,[u,{maxVal:o,minVal:s}]}(e);return[r,t,a]}function u(){let e=new Float32Array(1e3);for(let t=0;t<e.length;t++)e[t]=.2>Math.random()?NaN:Math.random();let[t,r]=s({data:e,shape:[10,10,10]});return t}},5901:()=>{},6067:(e,t,r)=>{"use strict";r.a(e,async(e,n)=>{try{r.d(t,{Ee:()=>d,Y5:()=>e});var a=r(3677),i=r(9773),o=r(6198),s=r(4911),l=r(9501),u=r(7430);async function c(e){let t=a.x(new i.A(e)),r=await t.then(e=>o.h(e,{kind:"group"}));var n="contents"in r.store?r.store.contents():{};let s=[];for(let e of Object.keys(n)){let t=n[e];t.path&&t.path.length>1&&"array"===t.kind&&s.push(t.path.substring(1))}return s}class e{async GetArray(e){if(this.variable=e,this.cache.has(e))return this.cache.get(e);let t=a.x(new i.A(this.storePath)),r=await t.then(e=>o.h(e,{kind:"group"})),n=await o.h(r.resolve(e),{kind:"array"});if(n.is("number")||n.is("bigint")){let t,r=await s.Jt(n);if(r.data instanceof BigInt64Array||r.data instanceof BigUint64Array)throw Error("BigInt arrays are not supported for conversion to Float32Array.");return t=new Float32Array(r.data),this.cache.set(e,r),{data:t,shape:r.shape,dtype:n.dtype}}throw Error("Unsupported data type: Only numeric arrays are supported. Got: ".concat(n.dtype))}async GetAttributes(e){let t="".concat(e,"_meta");if(this.cache.has(t))return this.cache.get(t);let r=a.x(new i.A(this.storePath)),n=await r.then(e=>o.h(e,{kind:"group"})),l=(await o.h(n.resolve(e),{kind:"array"})).attrs;this.cache.set(t,l);let u=[];for(let e of l._ARRAY_DIMENSIONS){if(!this.cache.has(e)){let t=await o.h(n.resolve(e),{kind:"array"}).then(e=>s.Jt(e)),r=await o.h(n.resolve(e),{kind:"array"}).then(e=>e.attrs);this.cache.set(e,t.data),this.cache.set("".concat(e,"_meta"),r)}u.push(e)}return this.dimNames=u,l}GetDimArrays(){let e=[],t=[];for(let r of this.dimNames)e.push(this.cache.get(r)),t.push(this.cache.get("".concat(r,"_meta")));return[e,t]}async GetTimeSeries(e){let{uv:t,normal:r}=e;if(!this.cache.has(this.variable))return[0];let{data:n,shape:a,stride:i}=this.cache.get(this.variable),o=(0,u.jT)({normal:r,uv:t}).map((e,t)=>null===e||null===a[t]?null:Math.round(e*a[t])),s=o.indexOf(null),l=i[s],c=null==o[0]?0:i[0]*o[0],d=null==o[1]?0:i[1]*o[1],m=null==o[2]?0:i[2]*o[2],h=[];for(let e=0;e<a[s];e++){let t=e*l+c+d+m;h.push(n[t])}return h}constructor(e){this.storePath=e,this.variable="Default",this.cache=new l.A({maxSize:2e3}),this.dimNames=["","",""]}}let d=await c("https://s3.bgc-jena.mpg.de:9000/esdl-esdc-v3.0.2/esdc-16d-2.5deg-46x72x1440-3.0.2.zarr");n()}catch(e){n(e)}},1)},6233:(e,t,r)=>{"use strict";r.d(t,{N:()=>n.N});var n=r(5735)},7430:(e,t,r)=>{"use strict";function n(e){if("Default"===e)return console.log("Aborting?"),1;if(!e||"string"!=typeof e||""===e.trim())return 1;let t=e.match(/^(\w+)\s+since\s+(.+)$/i);if(!t)throw Error('Invalid time unit format: expected "<unit> since <date>", got "'.concat(e,'"'));let[r,n,a]=t,i=n.toLowerCase(),o={millisecond:1,milliseconds:1,second:1e3,seconds:1e3,minute:6e4,minutes:6e4,hour:36e5,hours:36e5,day:864e5,days:864e5},s=i.endsWith("s")?i.slice(0,-1):i,l=void 0!==o[i]?i:s;if(!(l in o))throw Error('Unsupported time unit: "'.concat(n,'". Supported units: ').concat(Object.keys(o).join(", ")));return o[l]}function a(e,t){if(!t)return e;if("bigint"==typeof e){let r=n(t);return new Date(Number(e)*r).toDateString()}return t.match(/(degree|degrees|deg|°)/i)?"".concat(e.toFixed(2),"\xb0"):e.toFixed(2)}function i(e){let{normal:t,uv:r}=e;switch(!0){case 1===t.z:return[null,r.y,r.x];case -1===t.z:return[null,r.y,1-r.x];case 1===t.x:return[r.x,r.y,null];case -1===t.x:return[1-r.x,r.y,null];case 1===t.y:return[1-r.y,null,r.x];default:return[0,0,0]}}r.d(t,{SB:()=>a,jT:()=>i,lt:()=>n})},7796:(e,t,r)=>{"use strict";r.d(t,{_:()=>u});var n=r(2207),a=r(6023),i=r(3612),o=r(7870),s=r(3861),l=r(9581);let u=e=>{let{volTexture:t,shape:r,colormap:u}=e,c=(0,a.useRef)(null),d=(0,l.aF)("plot-pane"),m=(0,s.ap)({flip:!1},{title:"Volume",container:null!=d?d:void 0,expanded:!1}),[h]=(0,s.jD)(m,{label:"Clip Values",value:0,min:0,max:1,step:.01,format:e=>e.toFixed(2)}),[p]=(0,s.jD)(m,{label:"Quality",value:200,min:50,max:1e3,step:25}),[f]=(0,s.jD)(m,{label:"xmin",value:-1,min:-1,max:1,step:.01}),[x]=(0,s.jD)(m,{label:"xmax",value:1,min:-1,max:1,step:.01}),[v]=(0,s.jD)(m,{label:"ymin",value:-1,min:-1,max:1,step:.01}),[g]=(0,s.jD)(m,{label:"ymax",value:1,min:-1,max:1,step:.01}),[y]=(0,s.jD)(m,{label:"zmin",value:-1,min:-1,max:1,step:.01}),[w]=(0,s.jD)(m,{label:"zmax",value:1,min:-1,max:1,step:.01}),[b]=(0,s.Kr)(m,"flip",{label:"Invert values",value:!1}),S=new i.BKk({glslVersion:i.Wdf,uniforms:{map:{value:t},cmap:{value:u},cameraPos:{value:new i.Pq0},threshold:{value:h},scale:{value:r},flatBounds:{value:new i.IUQ(f,x,v,g)},vertBounds:{value:new i.I9Y(y,w)},steps:{value:p},flip:{value:b}},vertexShader:o.U0,fragmentShader:o.SU,transparent:!0,blending:i.NTi,depthWrite:!1,side:i.hsX}),D=(0,a.useMemo)(()=>new i.WBB(4,8),[]);return(0,n.jsx)(n.Fragment,{children:(0,n.jsx)("mesh",{ref:c,geometry:D,children:(0,n.jsx)("primitive",{attach:"material",object:S})})})}},7870:(e,t,r)=>{"use strict";r.d(t,{SU:()=>o,F_:()=>n,UE:()=>a,U0:()=>i});let n="out vec4 Color;\r\n\r\nvarying float vValue;\r\nuniform sampler2D cmap;\r\n\r\nvoid main() {\r\n\r\n    vec4 color = texture(cmap, vec2(vValue, 0.5));\r\n    color.a = 1.;\r\n\r\n    Color = color;\r\n    \r\n}\r\n",a="attribute float value;\r\nvarying float vValue;\r\nuniform float pointSize;\r\nuniform bool scalePoints;\r\nuniform float scaleIntensity;\r\n\r\nvoid main() {\r\n    vValue = value/255.;\r\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\r\n    //If it is nan we just yeet it tf out of the screen space. LMAO I love this solution\r\n    float pointScale = pointSize/gl_Position.w;\r\n    pointScale = scalePoints ? pointScale*pow(vValue,scaleIntensity) : pointScale;\r\n    if (value == 255. || (pointScale < 0.75 && scalePoints)){\r\n        gl_Position = vec4(2.0, 2.0, 2.0, 1.0);\r\n    }\r\n\r\n    gl_PointSize = pointScale;\r\n}\r\n",i=" // by Jeran Poehls\r\n\r\nout vec3 vOrigin;\r\nout vec3 vDirection;\r\nvarying vec2 Vuv;\r\n\r\nvoid main() {\r\n    vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\r\n    vOrigin = vec3( inverse( modelMatrix ) * vec4( cameraPosition, 1.0 ) ).xyz;\r\n    vDirection = position - vOrigin;\r\n    Vuv = uv;\r\n    gl_Position = projectionMatrix * mvPosition;\r\n}",o="// by Jeran Poehls\r\nprecision highp float;\r\nprecision highp sampler3D;\r\n\r\nuniform mat4 modelViewMatrix;\r\nuniform mat4 projectionMatrix;\r\n\r\nin vec3 vOrigin;\r\nin vec3 vDirection;\r\n\r\nout vec4 color;\r\n\r\nuniform sampler3D map;\r\nuniform sampler2D cmap;\r\n\r\nuniform vec3 scale;\r\nuniform float threshold;\r\nuniform float steps;\r\nuniform bool flip;\r\nuniform vec4 flatBounds;\r\nuniform vec2 vertBounds;\r\nuniform float intensity;\r\n\r\nvec2 hitBox(vec3 orig, vec3 dir) {\r\n    vec3 box_min = vec3(-(scale * 0.5));\r\n    vec3 box_max = vec3(scale * 0.5);\r\n    vec3 inv_dir = 1.0 / dir;\r\n    vec3 tmin_tmp = (box_min - orig) * inv_dir;\r\n    vec3 tmax_tmp = (box_max - orig) * inv_dir;\r\n    vec3 tmin = min(tmin_tmp, tmax_tmp);\r\n    vec3 tmax = max(tmin_tmp, tmax_tmp);\r\n    float t0 = max(tmin.x, max(tmin.y, tmin.z));\r\n    float t1 = min(tmax.x, min(tmax.y, tmax.z));\r\n    return vec2(t0, t1);\r\n}\r\n\r\nfloat sample1( vec3 p ) {\r\n    return texture( map, p ).r;\r\n}\r\n\r\n#define epsilon 0.0001\r\n\r\nvoid main() {\r\n    vec3 rayDir = normalize(vDirection);\r\n    vec2 bounds = hitBox(vOrigin, rayDir);\r\n\r\n    if (bounds.x > bounds.y) discard;\r\n\r\n    bounds.x = max(bounds.x, 0.0);\r\n\r\n    vec3 p = vOrigin + bounds.x * rayDir;\r\n    vec3 inc = 1.0 / abs(rayDir);\r\n    float delta = min(inc.x, min(inc.y, inc.z));\r\n    delta /= steps;\r\n\r\n    vec4 accumColor = vec4(0.0);\r\n    float alphaAcc = 0.0;\r\n    for (float t = bounds.x; t < bounds.y; t += delta) {\r\n        if (p.x > -flatBounds.x || p.x < -flatBounds.y) {\r\n            p += rayDir * delta;\r\n            continue;\r\n        }\r\n        if (-p.z > -flatBounds.z || -p.z < -flatBounds.w) {\r\n            p += rayDir * delta;\r\n            continue;\r\n        }\r\n        if (p.y < vertBounds.x || p.y > vertBounds.y) {\r\n            p += rayDir * delta;\r\n            continue;\r\n        }\r\n\r\n        float d = sample1(p / scale + 0.5);\r\n\r\n        bool cond = (d > threshold) || (d == 0.0 && threshold == 0.0);\r\n        cond = flip ? !cond : cond;\r\n\r\n        if (cond) {\r\n            vec4 col = texture(cmap, vec2(d, 0.5));\r\n            // Change this later back to use intensity then delete comment. Or maybe we don't need intensity\r\n            float alpha = float(col.a > 0.);\r\n\r\n            accumColor.rgb += (1.0 - alphaAcc) * alpha * col.rgb;\r\n            alphaAcc += alpha * (1.0 - alphaAcc);\r\n\r\n            if (alphaAcc >= 1.0) break;\r\n        }\r\n\r\n        p += rayDir * delta;\r\n    }\r\n\r\n    accumColor.a = alphaAcc; // Set the final accumulated alpha\r\n    color = accumColor;\r\n    if (color.a == 0.0) discard;\r\n}\r\n"},9591:(e,t,r)=>{"use strict";r.d(t,{A:()=>u});var n=r(2207),a=r(6023),i=r(3612),o=r(6439);class s{initAxis(e){let t=this.shape.filter((t,r)=>r!==e);this.GPUCompute=new o.d(t[0],t[1],this.renderer),this.targetAxis=e,this.renderTarget=this.GPUCompute.createRenderTarget(t[0],t[1],i.ghU,i.ghU,1006,1006)}Mean(e){e!==this.targetAxis&&this.initAxis(e);let t=this.GPUCompute.addVariable("reduction","uniform sampler3D dataArray;\nuniform int axis;\nuniform int axisSize;\n\nvoid main() {\n    vec2 uv = gl_FragCoord.xy / resolution.xy;\n\n    vec3 sampleCoord;\n    \n    // Initialize sampling coordinates based on reduction axis\n    if (axis == 0) {\n        // Reduce along depth (D0), uv maps to (s,t) = (D2,D1)\n        sampleCoord = vec3(uv.x, uv.y, 0.0);\n    } else if (axis == 1) {\n        // Reduce along height (D1), uv maps to (s,r) = (D2,D0)\n        sampleCoord = vec3(uv.x, 0.0, uv.y);\n    } else if (axis == 2) {\n        // Reduce along width (D2), uv maps to (t,r) = (D1,D0)\n        sampleCoord = vec3(0.0, uv.x, uv.y);\n    }\n\n    float sum = 0.0;\n    for (int m = 0; m < axisSize; m++) { \n        float coord = (float(m) + 0.5) / float(axisSize); //0.5 for center of pixel\n        // Vary the appropriate coordinate\n        if (axis == 0) {\n            sampleCoord.z = coord; // Vary r (depth)\n        } else if (axis == 1) {\n            sampleCoord.y = coord; // Vary t (height)\n        } else if (axis == 2) {\n            sampleCoord.x = coord; // Vary s (width)\n        }\n        float samp = texture(dataArray, sampleCoord).r;\n        sum += samp == 0.0 ? 0.6 : samp; // Assuming data in red channel\n    }\n    \n    float mean = sum / float(axisSize);\n    gl_FragColor = vec4(mean, 0.0, 0.0, 1.0); // Output mean in red channel\n}",this.initTexture);t.material.uniforms.dataArray={value:this.texture},t.material.uniforms.axisSize={value:this.shape[this.targetAxis]},t.material.uniforms.axis={value:this.targetAxis},this.GPUCompute.doRenderTarget(t.material,this.renderTarget);let r=new Float32Array(this.renderTarget.width*this.renderTarget.height*4);return this.renderer.readRenderTargetPixels(this.renderTarget,0,0,this.renderTarget.width,this.renderTarget.height,r),console.log(t.material),this.renderTarget.texture}Max(e){e!==this.targetAxis&&this.initAxis(e);let t=this.GPUCompute.addVariable("reduction","uniform sampler3D dataArray;\r\nuniform int axis;\r\nuniform int axisSize;\r\n\r\nvoid main() {\r\n    vec2 uv = gl_FragCoord.xy / resolution.xy;\r\n\r\n    vec3 sampleCoord;\r\n    \r\n    // Initialize sampling coordinates based on reduction axis\r\n    if (axis == 0) {\r\n        // Reduce along depth (D0), uv maps to (s,t) = (D2,D1)\r\n        sampleCoord = vec3(uv.x, uv.y, 0.0);\r\n    } else if (axis == 1) {\r\n        // Reduce along height (D1), uv maps to (s,r) = (D2,D0)\r\n        sampleCoord = vec3(uv.x, 0.0, uv.y);\r\n    } else if (axis == 2) {\r\n        // Reduce along width (D2), uv maps to (t,r) = (D1,D0)\r\n        sampleCoord = vec3(0.0, uv.x, uv.y);\r\n    }\r\n\r\n    float maxVal = 0.0;\r\n    for (int m = 0; m < axisSize; m++) { \r\n        float coord = (float(m) + 0.5) / float(axisSize); //0.5 for center of pixel\r\n        \r\n        // Vary the appropriate coordinate\r\n        if (axis == 0) {\r\n            sampleCoord.z = coord; // Vary r (depth)\r\n        } else if (axis == 1) {\r\n            sampleCoord.y = coord; // Vary t (height)\r\n        } else if (axis == 2) {\r\n            sampleCoord.x = coord; // Vary s (width)\r\n        }\r\n        float sampled = texture(dataArray, sampleCoord).r; // Assuming data in red channel\r\n        maxVal = sampled > maxVal ? sampled : maxVal; \r\n    }\r\n    \r\n    gl_FragColor = vec4(maxVal, 0.0, 0.0, 1.0); // Output mean in red channel\r\n}",this.initTexture);return t.material.uniforms.dataArray={value:this.texture},t.material.uniforms.axisSize={value:this.shape[this.targetAxis]},t.material.uniforms.axis={value:this.targetAxis},this.GPUCompute.doRenderTarget(t.material,this.renderTarget),this.renderTarget.texture}Min(e){e!==this.targetAxis&&this.initAxis(e);let t=this.GPUCompute.addVariable("reduction","uniform sampler3D dataArray;\r\nuniform int axis;\r\nuniform int axisSize;\r\n\r\nvoid main() {\r\n    vec2 uv = gl_FragCoord.xy / resolution.xy;\r\n\r\n    vec3 sampleCoord;\r\n    \r\n    // Initialize sampling coordinates based on reduction axis\r\n    if (axis == 0) {\r\n        // Reduce along depth (D0), uv maps to (s,t) = (D2,D1)\r\n        sampleCoord = vec3(uv.x, uv.y, 0.0);\r\n    } else if (axis == 1) {\r\n        // Reduce along height (D1), uv maps to (s,r) = (D2,D0)\r\n        sampleCoord = vec3(uv.x, 0.0, uv.y);\r\n    } else if (axis == 2) {\r\n        // Reduce along width (D2), uv maps to (t,r) = (D1,D0)\r\n        sampleCoord = vec3(0.0, uv.x, uv.y);\r\n    }\r\n\r\n    float minVal = 1.0e15; //BigNum\r\n    for (int m = 0; m < axisSize; m++) { \r\n        float coord = (float(m) + 0.5) / float(axisSize); //0.5 for center of pixel\r\n        \r\n        // Vary the appropriate coordinate\r\n        if (axis == 0) {\r\n            sampleCoord.z = coord; // Vary r (depth)\r\n        } else if (axis == 1) {\r\n            sampleCoord.y = coord; // Vary t (height)\r\n        } else if (axis == 2) {\r\n            sampleCoord.x = coord; // Vary s (width)\r\n        }\r\n        float sampled = texture(dataArray, sampleCoord).r; // Assuming data in red channel\r\n        minVal = sampled < minVal ? sampled : minVal; \r\n    }\r\n    \r\n    gl_FragColor = vec4(minVal, 0.0, 0.0, 1.0); // Output mean in red channel\r\n}",this.initTexture);return t.material.uniforms.dataArray={value:this.texture},t.material.uniforms.axisSize={value:this.shape[this.targetAxis]},t.material.uniforms.axis={value:this.targetAxis},this.GPUCompute.doRenderTarget(t.material,this.renderTarget),this.renderTarget.texture}StDev(e){e!==this.targetAxis&&this.initAxis(e);let t=this.GPUCompute.addVariable("reduction","uniform sampler3D dataArray;\r\nuniform int axis;\r\nuniform int axisSize;\r\n\r\nvoid main() {\r\n    vec2 uv = gl_FragCoord.xy / resolution.xy;\r\n\r\n    vec3 sampleCoord;\r\n    \r\n    // Initialize sampling coordinates based on reduction axis\r\n    if (axis == 0) {\r\n        // Reduce along depth (D0), uv maps to (s,t) = (D2,D1)\r\n        sampleCoord = vec3(uv.x, uv.y, 0.0);\r\n    } else if (axis == 1) {\r\n        // Reduce along height (D1), uv maps to (s,r) = (D2,D0)\r\n        sampleCoord = vec3(uv.x, 0.0, uv.y);\r\n    } else if (axis == 2) {\r\n        // Reduce along width (D2), uv maps to (t,r) = (D1,D0)\r\n        sampleCoord = vec3(0.0, uv.x, uv.y);\r\n    }\r\n\r\n    float sum = 0.0;\r\n    for (int m = 0; m < axisSize; m++) { \r\n        float coord = (float(m) + 0.5) / float(axisSize); //0.5 for center of pixel\r\n        \r\n        // Vary the appropriate coordinate\r\n        if (axis == 0) {\r\n            sampleCoord.z = coord; // Vary r (depth)\r\n        } else if (axis == 1) {\r\n            sampleCoord.y = coord; // Vary t (height)\r\n        } else if (axis == 2) {\r\n            sampleCoord.x = coord; // Vary s (width)\r\n        }\r\n        \r\n        sum += texture(dataArray, sampleCoord).r; // Assuming data in red channel\r\n    }\r\n    \r\n    float mean = sum / float(axisSize);\r\n\r\n\r\n    float squaredDiffSum = 0.0;\r\n\r\n    for (int m = 0; m < axisSize; m++) { \r\n        float coord = (float(m) + 0.5) / float(axisSize); //0.5 for center of pixel\r\n        \r\n        // Vary the appropriate coordinate\r\n        if (axis == 0) {\r\n            sampleCoord.z = coord; // Vary r (depth)\r\n        } else if (axis == 1) {\r\n            sampleCoord.y = coord; // Vary t (height)\r\n        } else if (axis == 2) {\r\n            sampleCoord.x = coord; // Vary s (width)\r\n        }\r\n\r\n        float diff = mean - texture(dataArray, sampleCoord).r;\r\n\r\n        squaredDiffSum += pow(diff,2.); // Assuming data in red channel\r\n    }\r\n    float stdev = sqrt(squaredDiffSum / float(axisSize));\r\n\r\n    gl_FragColor = vec4(stdev, 0.0, 0.0, 1.0); // Output mean in red channel\r\n}",this.initTexture);return t.material.uniforms.dataArray={value:this.texture},t.material.uniforms.axisSize={value:this.shape[this.targetAxis]},t.material.uniforms.axis={value:this.targetAxis},this.GPUCompute.doRenderTarget(t.material,this.renderTarget),this.renderTarget.texture}constructor(e,t,r){this.data=e.data,this.shape=e.shape,this.stride=e.stride,this.renderer=t,this.GPUCompute=new o.d(10,10,this.renderer),this.initTexture=this.GPUCompute.createTexture(),this.targetAxis=5,this.renderTarget=this.GPUCompute.createRenderTarget(10,10,i.ghU,i.ghU,1006,1006);let n=e.shape[0]*e.shape[1]*e.shape[2],a=new Uint8Array(n),{minVal:s,maxVal:l}=r;for(let e=0;e<n;e++){let t=(this.data[e]-s)/(l-s)*254;a[e]=isNaN(this.data[e])?255:t}this.texture=new i.dYF(a,this.shape[2],this.shape[1],this.shape[0]),this.texture.format=i.VT0,this.texture.needsUpdate=!0}}var l=r(884);let u=e=>{let{array:t,cmap:r,stateVars:o,valueScales:u}=e,{axis:c,operation:d,execute:m,active:h}=o,p=t.shape,[f,x]=(0,a.useState)(p.filter((e,t)=>t!==c)),{gl:v}=(0,l.A)(),g=new s(t,v,u),[y,w]=(0,a.useState)(new i.gPd),b=new i.BKk({glslVersion:i.Wdf,uniforms:{data:{value:y},cmap:{value:r}},vertexShader:" // by Jeran Poehls\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n    vUv = uv;\r\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\r\n}",fragmentShader:"uniform sampler2D data;\r\nuniform sampler2D cmap;\r\n\r\nvarying vec2 vUv;\r\nout vec4 Color;\r\n\r\nvoid main() {\r\n    vec4 val = texture(data,vUv);\r\n    vec4 color = texture(cmap, vec2(val.x,0.5));\r\n    color.a = 1.;\r\n    Color = color;\r\n}",side:i.$EB});return(0,a.useEffect)(()=>{if(t){let e;switch(d){case"Max":e=g.Max(c);break;case"Min":e=g.Min(c);break;case"Mean":e=g.Mean(c);break;case"StDev":e=g.StDev(c);break;default:e=y}w(e),x(p.filter((e,t)=>t!==c))}},[m]),(0,n.jsx)("mesh",{material:b,children:(0,n.jsx)("planeGeometry",{args:[f[1],f[0]]})})}},9611:(e,t,r)=>{"use strict";r.d(t,{N:()=>c});var n=r(2207),a=r(5623),i=r(7345),o=r(884),s=r(6023),l=r(7430),u=r(5735);function c(e){let{colorTicks:t="grey",tickSize:r=4,fontSize:c=14,showGrid:d=!0,gridOpacity:m=.5,height:h,yScale:p=1,xScale:f=1}=e,{camera:x}=(0,o.A)(),[v,g]=(0,s.useState)({left:0,right:0,top:0,bottom:0}),{coords:y,yRange:w,dimArrays:b,plotDim:S}=(0,s.useContext)(u.N),D=b[S],j=D.length,A=w[1]-w[0],C=(0,s.useMemo)(()=>{if(D){if(D.every(e=>"bigint"==typeof e)){let e=(0,l.lt)(y.plot.units),t=[];for(let r=0;r<D.length;r++){let n=Number(D[r])*e;t.push(new Date(n).toDateString())}return t}return D.map(e=>String(e))}},[D,y]),M=(0,s.useMemo)(()=>{let e=window.innerWidth,t=window.innerHeight-h;return{left:-e/2+x.position.x,right:e/2+x.position.x,top:t/2+x.position.y,bottom:-t/2+x.position.y}},[]),[z,P]=(0,s.useState)(x.zoom),V=(0,s.useMemo)(()=>{let e=1/x.zoom;return{tickSize:r*e,fontSize:c/e,labelOffset:r*e}},[x.zoom,r,c]);(0,o.C)(()=>{x.zoom!==z&&P(x.zoom);let e=window.innerWidth/x.zoom,t=(window.innerHeight-h)/x.zoom,r={left:-e/2+x.position.x,right:e/2+x.position.x,top:t/2+x.position.y,bottom:-t/2+x.position.y};JSON.stringify(v)!=JSON.stringify(r)&&g(r)});let N=(0,s.useRef)(null),F=(0,s.useRef)(null);(0,s.useEffect)(()=>(N.current&&clearTimeout(N.current),F.current&&(N.current=setTimeout(()=>{F.current&&F.current.reset()},100)),()=>{null!==N.current&&clearTimeout(N.current)}),[h]);let U=(v.top+v.bottom)/2,_=(v.left+v.right)/2;return(0,n.jsxs)("group",{children:[d&&(0,n.jsxs)(n.Fragment,{children:[Array.from({length:10},(e,r)=>{var i;if(0===r||9===r)return null;let o=+Math.round(v.left/1)+(Math.round(v.right/1)-Math.round(v.left/1))*(r/9),l=o/f/(M.right-M.left)+.5;return(0,n.jsxs)(s.Fragment,{children:[(0,n.jsx)("group",{position:[o,U,0],children:(0,n.jsxs)("line",{children:[(0,n.jsx)("bufferGeometry",{children:(0,n.jsx)("float32BufferAttribute",{attach:"attributes-position",args:[new Float32Array([0,v.top-U,0,0,v.bottom-U,0]),3]})}),(0,n.jsx)("lineDashedMaterial",{color:t,opacity:m,transparent:!0,dashSize:.5,gapSize:.5})]},"vgrid-".concat(r))}),(0,n.jsxs)("group",{position:[o,v.top,0],children:[(0,n.jsxs)("line",{children:[(0,n.jsx)("bufferGeometry",{children:(0,n.jsx)("float32BufferAttribute",{attach:"attributes-position",args:[new Float32Array([0,0,0,0,-V.tickSize,0]),3]})}),(0,n.jsx)("lineBasicMaterial",{color:t})]}),0!==r&&9!==r&&(0,n.jsx)(a.E,{position:[0,V.tickSize/4-V.labelOffset,0],fontSize:V.fontSize/z**2,color:t,anchorX:"center",anchorY:"top",children:null!=(i=null==C?void 0:C[Math.round(l*j-.5)])?i:""})]},"top-tick-".concat(r))]},"vert-group-".concat(r))}),Array.from({length:8},(e,r)=>{if(0===r||7===r)return null;let i=v.bottom+(v.top-v.bottom)*(r/7),o=i/p/(v.top-v.bottom)/z+.5;return(0,n.jsxs)(s.Fragment,{children:[(0,n.jsx)("group",{position:[_,i,0],children:(0,n.jsxs)("line",{children:[(0,n.jsx)("bufferGeometry",{children:(0,n.jsx)("float32BufferAttribute",{attach:"attributes-position",args:[new Float32Array([v.left-_,0,0,v.right-_,0,0]),3]})}),(0,n.jsx)("lineDashedMaterial",{color:t,opacity:m,transparent:!0,dashSize:0,gapSize:.5,linewidth:1})]})},"hgrid-".concat(r)),(0,n.jsxs)("group",{position:[v.right,i,0],children:[(0,n.jsxs)("line",{children:[(0,n.jsx)("bufferGeometry",{children:(0,n.jsx)("float32BufferAttribute",{attach:"attributes-position",args:[new Float32Array([0,0,0,-V.tickSize,0,0]),3]})}),(0,n.jsx)("lineBasicMaterial",{color:t})]}),0!==r&&7!==r&&(0,n.jsx)(a.E,{position:[-V.tickSize-V.labelOffset,0,0],fontSize:V.fontSize/z**2,color:t,anchorX:"right",anchorY:"middle",children:(w[0]+o*A).toFixed(1)})]},"right-tick-".concat(r))]},"vert-group-".concat(r))})]}),(0,n.jsx)(i.N,{ref:F,enableRotate:!1,enablePan:!0,enableZoom:!0,zoomSpeed:.85,maxDistance:500,maxZoom:20,minZoom:.5})]})}},9806:(e,t,r)=>{"use strict";r.a(e,async(e,n)=>{try{r.d(t,{K:()=>m});var a=r(2207),i=r(7345),o=r(6023),s=r(3612),l=r(5137),u=r(325),c=r(5861),d=e([l]);l=(d.then?(await d)():d)[0];let m=e=>{let{values:t,setters:r,timeSeriesObj:n}=e,{plotType:d,colormap:m,ZarrDS:h,variable:p,shape:f,bgcolor:x,canvasWidth:v}=t,{setShowLoading:g,setValueScales:y,setShape:w,setMetadata:b,setDimArrays:S,setDimNames:D,setDimUnits:j}=r,[A,C]=(0,o.useState)(null),[M,z]=(0,o.useState)(x||"var(--background)"),[P,V]=(0,o.useState)(null),[N,F]=(0,o.useState)(!1),[U,_]=(0,o.useState)(0);return(0,o.useEffect)(()=>{_(window.innerWidth);let e=()=>_(window.innerWidth);return window.addEventListener("resize",e),()=>window.removeEventListener("resize",e)},[]),(0,o.useEffect)(()=>{let e=new MutationObserver(e=>{e.forEach(e=>{"data-theme"===e.attributeName&&z("var(--background)")})});return e.observe(document.documentElement,{attributes:!0,attributeFilter:["data-theme"]}),()=>e.disconnect()},[]),(0,o.useEffect)(()=>{z(x||"var(--background)")},[x]),(0,o.useEffect)(()=>{if("Default"!=p)g(!0),h.GetArray(p).then(e=>{let[t,r,n]=(0,c.oW)({data:e.data,shape:e.shape});V(e),console.log("logging the shape since we will want to use it in the future for 2D vs 3D actions ".concat(r)),t instanceof s.GYF||t instanceof s.dYF?C(t):(console.error("Invalid texture type returned from ArrayToTexture"),C(null)),"object"==typeof n&&"maxVal"in n&&"minVal"in n&&y(n);let a=e.shape[1]/e.shape[2]*2;w(new s.Pq0(2,a,2)),g(!1)}),h.GetAttributes(p).then(e=>{b(e);let[t,r]=h.GetDimArrays();S(t);let n=[],a=[];for(let e of r)n.push(e.standard_name),a.push(e.units);D(n),j(a)});else{let e=(0,c.mt)();(e instanceof s.dYF||e instanceof s.GYF)&&C(e),w(new s.Pq0(2,2,2)),b(null)}},[p]),(0,a.jsx)("div",{className:"main-canvas",style:{width:U-v},children:(0,a.jsxs)(u.Hl,{camera:{position:[-4.5,3,4.5],fov:50},frameloop:"demand",style:{background:M},children:["volume"==d&&(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(l._k,{volTexture:A,shape:f,colormap:m}),(0,a.jsx)(l.xP,{...n})]}),"point-cloud"==d&&(0,a.jsx)(l.IE,{textures:{texture:A,colormap:m}}),(0,a.jsx)(i.N,{minPolarAngle:0,maxPolarAngle:Math.PI/2,enablePan:!1,maxDistance:50})]})})};n()}catch(e){n(e)}})}},e=>{var t=t=>e(e.s=t);e.O(0,[480,365,230,970,667,195,912,984,269,770,681,581,80,448,358],()=>t(4394)),_N_E=e.O()}]);