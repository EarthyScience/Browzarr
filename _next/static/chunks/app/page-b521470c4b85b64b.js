(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[974],{1219:()=>{},1700:(e,t,n)=>{Promise.resolve().then(n.bind(n,2538))},2538:(e,t,n)=>{"use strict";n.d(t,{default:()=>H});var r=n(8049),i=n(5272),a=n(6773),o=n(3411),s=n(4981),l=n(2818),c=n(6251);n(8947);let u=e=>"string"==typeof e?e:Array.isArray(e)?e.join(", "):String(e),m=e=>{let{meta:t}=e,[n,i]=(0,s.useState)(!1),a=(0,l.on)((0,c.k)(e=>e.setVariable));return(0,r.jsxs)("div",{className:"meta-container max-w-sm md:max-w-md",style:{background:"var(--background)",border:"1px solid var(--border)",borderRadius:"8px",padding:"10px",marginBottom:"10px"},children:[(0,r.jsxs)("div",{className:"meta-info",children:[(0,r.jsx)("b",{children:"Long Name:"})," ","".concat(t.long_name),(0,r.jsx)("br",{}),(0,r.jsxs)("div",{style:{maxHeight:n?"500px":"0px",overflow:"hidden",transition:"0.3s"},children:[(0,r.jsx)("b",{children:"Shape:"})," ","[".concat(u(t.shape),"]"),(0,r.jsx)("br",{}),(0,r.jsx)("b",{children:"dType: "})," ","".concat(t.dtype),(0,r.jsx)("br",{}),(0,r.jsx)("b",{children:"Total Size: "}),"".concat(t.totalSizeFormatted),(0,r.jsx)("br",{}),(0,r.jsx)("b",{children:"Chunk Shape:"})," ","[".concat(u(t.chunks),"]"),(0,r.jsx)("br",{}),(0,r.jsx)("b",{children:"Chunk Count:"})," ","".concat(t.chunkCount),(0,r.jsx)("br",{}),(0,r.jsx)("b",{children:"Chunk Size:"})," ","".concat(t.chunkSizeFormatted)]}),(0,r.jsx)("div",{className:"meta-hidden",onClick:()=>i(e=>!e),children:n?"less ↑":"more ↓"})]}),(0,r.jsx)("button",{onClick:()=>a(t.name),children:(0,r.jsx)("b",{children:"Plot"})})]})},d=()=>{let{variables:e,zMeta:t,setVariable:n}=(0,l.on)((0,c.k)(e=>({variables:e.variables,zMeta:e.zMeta,setVariable:e.setVariable}))),[i,a]=(0,s.useState)(Math.floor(e.length/2)),[o,u]=(0,s.useState)(null),[d,h]=(0,s.useState)(82),f=(0,s.useRef)(null),p=(0,s.useRef)(0);function x(){let e=window.innerWidth;e<=480?h(42):e<=570?h(54):h(82)}return(0,s.useEffect)(()=>{let e=e=>{e.cancelable&&e.preventDefault()};return document.addEventListener("touchmove",e,{passive:!1}),()=>{document.removeEventListener("touchmove",e)}},[]),(0,s.useEffect)(()=>{if(e&&t){let n=e[i];u(t.find(e=>e.name===n))}},[i,e]),(0,s.useEffect)(()=>{let e=window.innerWidth;return e<=480?h(42):e<=570?h(54):h(82),window.addEventListener("resize",x)},[]),(0,r.jsxs)("div",{className:"scroll-container",onWheel:t=>{let n=i+(t.deltaY>0?1:-1);n>=0&&n<e.length&&a(n)},onTouchMove:t=>{let n=t.touches[0].clientY,r=f.current?f.current:n;if(f.current=n,p.current+=r-n,Math.abs(p.current)>=d){let t=i+(p.current>0?1:-1);t>=0&&t<e.length&&(a(t),p.current=0)}},onTouchEnd:()=>{f.current=null,p.current=0},children:[o&&(0,r.jsx)(m,{meta:o}),(0,r.jsx)("div",{className:"scroll-element",style:{transform:"translateY(calc(50% + ".concat(-i*d,"px))")},children:e.map((e,t)=>{let o=Math.abs(i-t);return(0,r.jsx)("div",{className:"scroll-item",style:{opacity:1-.3*o,fontWeight:i===t?"bold":"normal"},onClick:()=>a(t),onDoubleClick:()=>n(e),children:e},t)})})]})},h=" // by Jeran Poehls\r\n\r\nout vec3 vOrigin;\r\nout vec3 vDirection;\r\nout vec3 aPosition;\r\n\r\nout vec2 Vuv;\r\n\r\nvoid main() {\r\n    vec4 worldPos = modelViewMatrix * vec4( position, 1.0 );\r\n\r\n    aPosition = position; //Pass out position for sphere frag\r\n    vOrigin = vec3( inverse( modelMatrix ) * vec4( cameraPosition, 1.0 ) ).xyz;\r\n    vDirection = position - vOrigin;\r\n    Vuv = uv;\r\n    gl_Position = projectionMatrix * worldPos;\r\n}";var f=n(7542);let p=e=>{let{volTexture:t}=e,{shape:n,colormap:a,flipY:o}=(0,l.on)((0,c.k)(e=>({shape:e.shape,colormap:e.colormap,flipY:e.flipY}))),{valueRange:u,xRange:m,yRange:d,zRange:p,quality:x,animate:v,resetAnim:g,cScale:y,cOffset:w,useFragOpt:S}=(0,l.Ws)((0,c.k)(e=>({valueRange:e.valueRange,xRange:e.xRange,yRange:e.yRange,zRange:e.zRange,quality:e.quality,animate:e.animate,resetAnim:e.resetAnim,cScale:e.cScale,cOffset:e.cOffset,useFragOpt:e.useFragOpt}))),[b,j]=(0,s.useState)(0),C=(0,s.useMemo)(()=>new i.BKk({glslVersion:i.Wdf,uniforms:{map:{value:t},cmap:{value:a},cOffset:{value:w},cScale:{value:y},cameraPos:{value:new i.Pq0},threshold:{value:new i.I9Y(u[0],u[1])},scale:{value:n},flatBounds:{value:new i.IUQ(m[0],m[1],p[0],p[1])},vertBounds:{value:new i.I9Y(d[0]/n.x,d[1]/n.x)},steps:{value:x},animateProg:{value:b}},vertexShader:h,fragmentShader:S?"// by Jeran Poehls\r\nprecision highp float;\r\nprecision highp sampler3D;\r\n\r\nin vec3 vOrigin;\r\nin vec3 vDirection;\r\n\r\nout vec4 color;\r\n\r\nuniform sampler3D map;\r\nuniform sampler2D cmap;\r\n\r\nuniform float cOffset;\r\nuniform float cScale;\r\nuniform vec3 scale;\r\nuniform vec2 threshold;\r\nuniform float steps;\r\nuniform vec4 flatBounds;\r\nuniform vec2 vertBounds;\r\nuniform float animateProg;\r\n\r\nvec2 hitBox(vec3 orig, vec3 dir) {\r\n    vec3 box_min = vec3(-(scale * 0.5));\r\n    vec3 box_max = vec3(scale * 0.5);\r\n    vec3 inv_dir = 1.0 / dir;\r\n    vec3 tmin_tmp = (box_min - orig) * inv_dir;\r\n    vec3 tmax_tmp = (box_max - orig) * inv_dir;\r\n    vec3 tmin = min(tmin_tmp, tmax_tmp);\r\n    vec3 tmax = max(tmin_tmp, tmax_tmp);\r\n    float t0 = max(tmin.x, max(tmin.y, tmin.z));\r\n    float t1 = min(tmax.x, min(tmax.y, tmax.z));\r\n    return vec2(t0, t1);\r\n}\r\n\r\nfloat sample1( vec3 p ) {\r\n    return texture( map, p ).r;\r\n}\r\n\r\n#define epsilon 0.0001\r\n\r\nvoid main() {\r\n    vec3 rayDir = normalize(vDirection);\r\n    vec2 bounds = hitBox(vOrigin, rayDir);\r\n\r\n    if (bounds.x > bounds.y) discard;\r\n\r\n    bounds.x = max(bounds.x, 0.0);\r\n\r\n    vec3 p = vOrigin + bounds.x * rayDir;\r\n    vec3 inc = 1.0 / abs(rayDir);\r\n\r\n    //Step Sizes\r\n    float fineDelta = min(inc.x, min(inc.y, inc.z)) / steps;\r\n\r\n    float coarseDelta = min(inc.x, min(inc.y, inc.z))/40.;\r\n\r\n    float delta = fineDelta;\r\n\r\n    vec4 accumColor = vec4(0.0);\r\n    float alphaAcc = 0.0;\r\n\r\n    float t = bounds.x;\r\n    int countdown = 0;\r\n    bool useCoarseStep = false;\r\n\r\n    while (t < bounds.y) {\r\n        vec3 p = vOrigin + rayDir * t;\r\n        \r\n        // --- Boundary checks ---\r\n        if (p.x < flatBounds.x || p.x > flatBounds.y ||\r\n            p.z < flatBounds.z || p.z > flatBounds.w ||\r\n            p.y < vertBounds.x || p.y > vertBounds.y) {\r\n\r\n            t += useCoarseStep ? coarseDelta : fineDelta;\r\n            continue;\r\n        }\r\n\r\n        vec3 texCoord = p / scale + 0.5;\r\n        texCoord.z = mod(texCoord.z + animateProg, 1.0001);\r\n        float d = sample1(texCoord);\r\n\r\n        bool cond = (d > threshold.x) && (d < threshold.y);\r\n        \r\n        if (cond) {\r\n            // Hit something interesting - switch to fine stepping\r\n            if (useCoarseStep) {\r\n                useCoarseStep = false;\r\n                countdown = 50;\r\n                // Step back to ensure we don't miss the boundary\r\n                t -= 2.*coarseDelta;\r\n                continue;\r\n            }\r\n            float sampLoc = d == 1. ? d : (d - 0.5)*cScale + 0.5;\r\n            sampLoc = d == 1. ? d : min(sampLoc+cOffset,0.99);\r\n            vec4 col = texture(cmap, vec2(sampLoc, 0.5));\r\n            float alpha = float(col.a > 0.);\r\n\r\n            accumColor.rgb += (1.0 - alphaAcc) * alpha * col.rgb;\r\n            alphaAcc += alpha * (1.0 - alphaAcc);\r\n\r\n            if (alphaAcc >= 1.0) break;\r\n            \r\n            t += fineDelta;\r\n        }\r\n        else {\r\n            // Nothing interesting here\r\n            if (countdown > 0) {\r\n                countdown--;\r\n                t += fineDelta; // Continue with fine steps while countdown > 0\r\n            } else {\r\n                useCoarseStep = true;\r\n                t += coarseDelta; // Switch to coarse steps\r\n            }\r\n        }\r\n    }\r\n    accumColor.a = alphaAcc; // Set the final accumulated alpha\r\n    color = accumColor;\r\n    if (color.a == 0.0) discard;\r\n}\r\n":"// by Jeran Poehls\r\nprecision highp float;\r\nprecision highp sampler3D;\r\n\r\nin vec3 vOrigin;\r\nin vec3 vDirection;\r\n\r\nout vec4 color;\r\n\r\nuniform sampler3D map;\r\nuniform sampler2D cmap;\r\n\r\nuniform float cOffset;\r\nuniform float cScale;\r\nuniform vec3 scale;\r\nuniform vec2 threshold;\r\nuniform float steps;\r\nuniform vec4 flatBounds;\r\nuniform vec2 vertBounds;\r\nuniform float animateProg;\r\n\r\nvec2 hitBox(vec3 orig, vec3 dir) {\r\n    vec3 box_min = vec3(-(scale * 0.5));\r\n    vec3 box_max = vec3(scale * 0.5);\r\n    vec3 inv_dir = 1.0 / dir;\r\n    vec3 tmin_tmp = (box_min - orig) * inv_dir;\r\n    vec3 tmax_tmp = (box_max - orig) * inv_dir;\r\n    vec3 tmin = min(tmin_tmp, tmax_tmp);\r\n    vec3 tmax = max(tmin_tmp, tmax_tmp);\r\n    float t0 = max(tmin.x, max(tmin.y, tmin.z));\r\n    float t1 = min(tmax.x, min(tmax.y, tmax.z));\r\n    return vec2(t0, t1);\r\n}\r\n\r\nfloat sample1( vec3 p ) {\r\n    return texture( map, p ).r;\r\n}\r\n\r\n#define epsilon 0.0001\r\n\r\nvoid main() {\r\n    vec3 rayDir = normalize(vDirection);\r\n    vec2 bounds = hitBox(vOrigin, rayDir);\r\n\r\n    if (bounds.x > bounds.y) discard;\r\n\r\n    bounds.x = max(bounds.x, 0.0);\r\n\r\n    vec3 p = vOrigin + bounds.x * rayDir;\r\n    vec3 inc = 1.0 / abs(rayDir);\r\n    float delta = min(inc.x, min(inc.y, inc.z));\r\n    delta /= steps;\r\n    vec4 accumColor = vec4(0.0);\r\n    float alphaAcc = 0.0;\r\n\r\n    for (float t = bounds.x; t < bounds.y; t += delta) {\r\n        p = vOrigin + rayDir * t;\r\n        if (p.x > -flatBounds.x || p.x < -flatBounds.y) { \r\n            continue;\r\n        }\r\n        if (-p.z > -flatBounds.z || -p.z < -flatBounds.w) {\r\n            continue;\r\n        }\r\n        if (p.y < vertBounds.x || p.y > vertBounds.y) {\r\n            continue;\r\n        }\r\n\r\n        vec3 texCoord = p / scale + 0.5;\r\n        texCoord.z = mod(texCoord.z + animateProg, 1.0001);\r\n        float d = sample1(texCoord);\r\n\r\n        bool cond = (d > threshold.x) && (d < threshold.y);\r\n        \r\n        if (cond) {\r\n            float sampLoc = d == 1. ? d : (d - 0.5)*cScale + 0.5;\r\n            sampLoc = d == 1. ? d : min(sampLoc+cOffset,0.99);\r\n            vec4 col = texture(cmap, vec2(sampLoc, 0.5));\r\n            // Change this later back to use intensity then delete comment. Or maybe we don't need intensity\r\n            float alpha = float(col.a > 0.);\r\n\r\n            accumColor.rgb += (1.0 - alphaAcc) * alpha * col.rgb;\r\n            alphaAcc += alpha * (1.0 - alphaAcc);\r\n\r\n            if (alphaAcc >= 1.0) break;\r\n        }\r\n    }\r\n\r\n    accumColor.a = alphaAcc; // Set the final accumulated alpha\r\n    color = accumColor;\r\n    if (color.a == 0.0) discard;\r\n}\r\n",transparent:!0,blending:i.NTi,depthWrite:!1,side:i.hsX}),[t,a,w,y,u,m,d,p,x,b,S]),D=(0,s.useMemo)(()=>new i.WBB(2,4),[]);return(0,f.D)(()=>{v&&j((b+.001)%1)}),(0,s.useEffect)(()=>()=>{D.dispose()},[]),(0,s.useEffect)(()=>{j(0)},[g]),(0,r.jsx)(r.Fragment,{children:(0,r.jsx)("mesh",{geometry:D,scale:[1,o?-1:1,1],children:(0,r.jsx)("primitive",{attach:"material",object:C})})})};var x=n(4186);let v=e=>{let{ZarrDS:t}=e,[n,a]=(0,s.useState)(null),{setTimeSeries:o,setPlotDim:u,setDimCoords:m}=(0,l.on)((0,c.k)(e=>({setTimeSeries:e.setTimeSeries,setPlotDim:e.setPlotDim,setDimCoords:e.setDimCoords}))),{shape:d,dimArrays:h,dimNames:f,dimUnits:p}=(0,l.on)((0,c.k)(e=>({shape:e.shape,dimArrays:e.dimArrays,dimNames:e.dimNames,dimUnits:e.dimUnits}))),v=(0,l.Ws)(e=>e.selectTS),g=(0,s.useMemo)(()=>new i.iNn(1,1,1),[]);return(0,s.useEffect)(()=>()=>{g.dispose()},[]),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)("mesh",{geometry:g,scale:d,onClick:e=>{e.stopPropagation(),e.intersections.length>0&&v&&function(e){let n=e.point,r=e.uv,i=e.normal;if(t){var s,l;t.GetTimeSeries({uv:r,normal:i}).then(e=>o(e));let e=i.toArray().map((e,t)=>Math.abs(e)>0?t:null).filter(e=>null!==e);u(2-e[0]);let n=(0,x.jT)({normal:i,uv:r}).map((e,t)=>e?h[t][Math.round(e*h[t].length)]:null),a=f.filter((e,t)=>null!==n[t]),c=p.filter((e,t)=>null!==n[t]);n=n.filter(e=>null!==e),m({first:{name:a[0],loc:null!=(s=n[0])?s:0,units:c[0]},second:{name:a[1],loc:null!=(l=n[1])?l:0,units:c[1]},plot:{units:p[2-e[0]]}})}a(n)}(e.intersections[0])},children:(0,r.jsx)("meshBasicMaterial",{transparent:!0,opacity:0})}),n&&(0,r.jsxs)("mesh",{position:n,scale:.01,children:[(0,r.jsx)("boxGeometry",{}),(0,r.jsx)("meshBasicMaterial",{color:"#ff0000"})]})]})},g=e=>{let{dimensions:t,ZarrDS:n,setters:i}=e,{width:a,height:o,depth:s}=t,{setPointID:u,setStride:m,setDimWidth:d}=i,h=(0,l.Ws)(e=>e.selectTS),f=a/o,p=s/o,{dimArrays:v,dimUnits:g,dimNames:y,strides:w,setPlotDim:S,setTimeSeries:b,setDimCoords:j}=(0,l.on)((0,c.k)(e=>({dimArrays:e.dimArrays,dimUnits:e.dimUnits,dimNames:e.dimNames,strides:e.strides,setPlotDim:e.setPlotDim,setTimeSeries:e.setTimeSeries,setDimCoords:e.setDimCoords}))),C=(0,l.Ws)(e=>e.timeScale);return(0,r.jsxs)("mesh",{scale:[2*f,2,2*p*C],onClick:function(e){if(!h)return;let t=e.uv,r=e.normal;if(n){var i,l;n.GetTimeSeries({uv:t,normal:r}).then(e=>b(e));let e=r.toArray().map((e,t)=>Math.abs(e)>0?t:null).filter(e=>null!==e);S(2-e[0]);let c=(0,x.jT)({normal:r,uv:t}),h=c.map((e,t)=>e?v[t][Math.round(e*v[t].length-.5)]:null);console.log(h);let f=y.filter((e,t)=>null!==h[t]),p=g.filter((e,t)=>null!==h[t]);h=h.filter(e=>null!==e),j({first:{name:f[0],loc:null!=(i=h[0])?i:0,units:p[0]},second:{name:f[1],loc:null!=(l=h[1])?l:0,units:p[1]},plot:{units:g[2-e[0]]}});let C=[s,o,a].filter((e,t)=>null!=c[t]),D=[s,o,a].filter((e,t)=>null==c[t]),M=c.filter(e=>null!=e),z=w.filter((e,t)=>null!=c[t]),A=Math.round(M[0]*C[0]-.5),P=Math.round(M[1]*C[1]-.5),V=A*z[0]+P*z[1],T=w.filter((e,t)=>null==c[t]);d(D[0]),u(V),m(T[0])}},children:[(0,r.jsx)("boxGeometry",{}),(0,r.jsx)("meshBasicMaterial",{transparent:!0,opacity:0})]})},y=e=>{let{textures:t,ZarrDS:n}=e,{texture:a,colormap:o}=t,u=(0,l.on)(e=>e.flipY),{scalePoints:m,scaleIntensity:d,pointSize:h,cScale:f,cOffset:p,valueRange:x,selectTS:v,timeScale:y}=(0,l.Ws)((0,c.k)(e=>({scalePoints:e.scalePoints,scaleIntensity:e.scaleIntensity,pointSize:e.pointSize,cScale:e.cScale,cOffset:e.cOffset,valueRange:e.valueRange,selectTS:e.selectTS,timeScale:e.timeScale}))),[w,S]=(0,s.useState)(null),[b,j]=(0,s.useState)(1),[C,D]=(0,s.useState)(0),{data:M,width:z,height:A,depth:P}=(0,s.useMemo)(()=>a instanceof i.dYF?{data:a.image.data,width:a.image.width,height:a.image.height,depth:a.image.depth}:(console.warn("Provided texture is not a Data3DTexture"),{data:[],width:0,height:0,depth:0}),[a]),V=z/A,T=P/A,{positions:k,values:R}=(0,s.useMemo)(()=>{let e=[],t=[];for(let n=0;n<P;n++)for(let r=0;r<A;r++)for(let i=0;i<z;i++){let a=M[i+r*z+n*z*A]||0,o=(i/(z-1)-.5)*V,s=r/(A-1)-.5,l=(n/(P-1)-.5)*T;e.push(2*o,2*s,2*l),t.push(a)}return{positions:e,values:t}},[M,z,A,P]),F=(0,s.useMemo)(()=>{let e=new i.LoY;return e.setAttribute("position",new i.qtW(k,3)),e.setAttribute("value",new i.qtW(R,1)),e},[k,R]),N=(0,s.useMemo)(()=>new i.BKk({glslVersion:i.Wdf,uniforms:{pointSize:{value:h},cmap:{value:o},cOffset:{value:p},cScale:{value:f},valueRange:{value:new i.I9Y(x[0],x[1])},scalePoints:{value:m},scaleIntensity:{value:d},startID:{value:w},stride:{value:b},showTransect:{value:v},dimWidth:{value:C},timeScale:{value:y}},vertexShader:"attribute float value;\r\nout float vValue;\r\n\r\nflat out int highlight;\r\n\r\nuniform float pointSize;\r\nuniform bool scalePoints;\r\nuniform float scaleIntensity;\r\nuniform vec2 valueRange;\r\nuniform int startID;\r\nuniform int stride;\r\nuniform int dimWidth;\r\nuniform bool showTransect;\r\nuniform float timeScale;\r\n\r\nvoid main() {\r\n    vValue = value/255.;\r\n    vec3 scaledPos = position;\r\n    scaledPos.z *= timeScale;\r\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(scaledPos, 1.0);\r\n    //If it is nan we just yeet it tf out of the screen space. LMAO I love this solution\r\n    float pointScale = pointSize/gl_Position.w;\r\n    pointScale = scalePoints ? pointScale*pow(vValue,scaleIntensity) : pointScale;\r\n\r\n    int rePos = gl_VertexID - startID;\r\n    bool isValid = rePos % stride == 0;\r\n    bool secondary = gl_VertexID < (startID + dimWidth*stride) && gl_VertexID > startID;\r\n    isValid = isValid && secondary;\r\n    isValid = isValid && startID != -1; //This is so nothing is selected when pointID is reset to -1.\r\n    highlight = isValid ? 1 : 0;\r\n    \r\n\r\n    if (value == 255. || (pointScale*gl_Position.w < 0.75 && scalePoints)){\r\n        gl_Position = vec4(2.0, 2.0, 2.0, 1.0);\r\n    }\r\n\r\n    if (vValue < valueRange.x || vValue > valueRange.y){\r\n        gl_Position = vec4(2.0, 2.0, 2.0, 1.0);\r\n    }\r\n    if (showTransect){\r\n        gl_PointSize = isValid ? max(pointScale*5. , pointScale+80./gl_Position.w) : pointScale;\r\n    }\r\n    else{\r\n        gl_PointSize =  pointScale;\r\n    }\r\n\r\n}\r\n",fragmentShader:"out vec4 Color;\r\n\r\nin float vValue;\r\nflat in int highlight;\r\n\r\n\r\nuniform sampler2D cmap;\r\nuniform float cScale;\r\nuniform float cOffset;\r\nuniform bool showTransect;\r\n\r\nvoid main() {\r\n\r\n    float sampLoc = vValue == 1. ? vValue : (vValue - 0.5)*cScale + 0.5;\r\n    sampLoc = vValue == 1. ? vValue : min(sampLoc+cOffset,0.99);\r\n    vec4 color = texture(cmap, vec2(sampLoc, 0.5));\r\n    color.a = 1.;\r\n    Color = color;\r\n    if (showTransect){\r\n        Color = highlight == 1 ? color : color * vec4(vec3(0.4),1.);\r\n    }\r\n    else{\r\n        Color = color;\r\n    }\r\n\r\n}\r\n",depthWrite:!0,transparent:!0,blending:i.NTi,side:i.$EB}),[h,o,p,f,x,m,d,w,b,v,y]);return(0,s.useEffect)(()=>{v||S(-1)},[v]),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)("mesh",{scale:[1,u?-1:1,1],children:(0,r.jsx)("points",{geometry:F,material:N})}),(0,r.jsx)(g,{dimensions:{width:z,height:A,depth:P},ZarrDS:n,setters:{setPointID:S,setStride:j,setDimWidth:D}})]})};var w=n(6483),S=n(731);n(1219);var b=n(677);n(3040);var j=n(3662);let C=s.memo(function(){let{showPoints:e,linePointSize:t,pointColor:n,setLinePointSize:i,setPointColor:a}=(0,l.Ws)((0,c.k)(e=>({showPoints:e.showPoints,linePointSize:e.linePointSize,pointColor:e.pointColor,setLinePointSize:e.setLinePointSize,setPointColor:e.setPointColor})));return e?(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)("div",{className:"w-full flex items-center",children:[(0,r.jsx)("div",{className:"w-[40%]",children:(0,r.jsx)("b",{children:"Point Size"})}),(0,r.jsx)("input",{type:"range",min:1,max:10,step:.1,value:t,onChange:e=>i(parseFloat(e.target.value))})]}),(0,r.jsxs)("div",{className:"w-full flex items-center",children:[(0,r.jsx)("div",{className:"w-[40%]",children:(0,r.jsx)("b",{children:"Point Color"})}),(0,r.jsx)("input",{type:"color",title:"Point Color",value:n,onChange:e=>a(e.target.value)})]})]}):null}),D=s.memo(function(){let{lineWidth:e,lineColor:t,useLineColor:n,lineResolution:i,setLineWidth:a,setLineColor:o,setUseLineColor:s,setLineResolution:u}=(0,l.Ws)((0,c.k)(e=>({lineWidth:e.lineWidth,lineColor:e.lineColor,useLineColor:e.useLineColor,lineResolution:e.lineResolution,setLineWidth:e.setLineWidth,setLineColor:e.setLineColor,setUseLineColor:e.setUseLineColor,setLineResolution:e.setLineResolution})));return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)("div",{className:"w-full flex items-center",children:[(0,r.jsx)("div",{className:"w-[40%]",children:(0,r.jsx)("b",{children:"Line Width"})}),(0,r.jsx)("input",{type:"range",min:1,max:10,step:.2,value:e,onChange:e=>a(parseFloat(e.target.value))})]}),(0,r.jsxs)("div",{className:"w-full flex items-center",children:[(0,r.jsx)("div",{className:"w-[40%]",children:(0,r.jsx)("b",{children:"Line Resolution"})}),(0,r.jsx)("input",{type:"range",min:1,max:10,step:1,value:i,onChange:e=>u(parseFloat(e.target.value))})]}),(0,r.jsxs)("div",{className:"w-full flex items-center",children:[(0,r.jsx)("div",{className:"w-[40%]",children:(0,r.jsx)("b",{children:"Line Color"})}),n&&(0,r.jsx)("input",{type:"color",title:"Line Color",value:t,onChange:e=>o(e.target.value)}),(0,r.jsx)(b.$,{className:"h-8 px-2 py-1",variant:"outline",onClick:()=>s(!n),children:n?"Use Plot Color":"Use Single Color"})]})]})}),M=s.memo(function(){let{showPoints:e,setShowPoints:t}=(0,l.Ws)((0,c.k)(e=>({showPoints:e.showPoints,setShowPoints:e.setShowPoints})));return(0,r.jsx)("div",{className:"plotline-options",children:(0,r.jsxs)(j.rI,{children:[(0,r.jsx)(j.ty,{asChild:!0,children:(0,r.jsx)(b.$,{className:"cursor-pointer",variant:"outline",children:"Line Options"})}),(0,r.jsxs)(j.SQ,{className:"w-60 items-center",align:"center",children:[(0,r.jsx)(j.I,{onClick:e=>e.preventDefault(),children:(0,r.jsx)(j._2,{children:(0,r.jsx)(b.$,{variant:"outline",onClick:n=>{n.preventDefault(),t(!e)},children:e?"Hide Points":"Show Points"})})}),(0,r.jsx)(C,{}),(0,r.jsx)(j.mB,{}),(0,r.jsx)(D,{})]})]})})});function z(e){let{pointID:t,pointLoc:n,showPointInfo:i,plotUnits:a}=e,{plotDim:o,dimArrays:u,dimNames:m,dimUnits:d,timeSeries:h}=(0,l.on)((0,c.k)(e=>({plotDim:e.plotDim,dimArrays:e.dimArrays,dimNames:e.dimNames,dimUnits:e.dimUnits,timeSeries:e.timeSeries}))),f=h[t],p=u[o][t],[v,g]=n,[y,w]=(0,s.useState)(!1);return(0,s.useEffect)(()=>{if(!i){let e=setTimeout(()=>{w(!1)},100);return()=>clearTimeout(e)}w(!0)},[i]),(0,r.jsx)(r.Fragment,{children:y&&(0,r.jsxs)("div",{className:"point-info",style:{left:"".concat(v,"px"),top:"".concat(g,"px")},children:["".concat(f.toFixed(2)).concat(a),(0,r.jsx)("br",{}),"".concat(m[o],": ").concat((0,x.SB)(p,d[o]),"       \n        ")]})})}function A(){let e=(0,l.on)(e=>e.dimCoords),[t,n]=(0,s.useState)(!1),i=(0,s.useRef)([0,Math.round(.255*window.innerHeight)]),a=(0,s.useRef)([0,Math.round(.255*window.innerHeight)]),[o,c]=(0,s.useState)([0,Math.round(.255*window.innerHeight)]);function u(e){if(t){let t=i.current[0]-e.clientX,n=i.current[1]-e.clientY,r=Math.max(a.current[0]-t,10),o=Math.max(a.current[1]+n,0);c([Math.min(r,window.innerWidth-100),Math.min(o,window.innerHeight-100)])}}function m(){n(!1)}return(0,s.useEffect)(()=>(t&&(document.addEventListener("mousemove",u),document.addEventListener("mouseup",m)),()=>{document.removeEventListener("mousemove",u),document.removeEventListener("mouseup",m)}),[t]),(0,r.jsx)(r.Fragment,{children:e&&"Default"!==e.first.name&&(0,r.jsxs)("div",{className:"plot-coords",style:{left:"".concat(o[0],"px"),bottom:"".concat(o[1],"px")},onPointerDown:function(e){i.current=[e.clientX,e.clientY],a.current=[...o],n(!0)},onPointerMove:u,onPointerUp:()=>n(!1),children:[(0,r.jsx)("b",{children:"".concat(e.first.name,": ")}),"".concat((0,x.SB)(e.first.loc,e.first.units)),(0,r.jsx)("br",{}),(0,r.jsx)("b",{children:"".concat(e.second.name,": ")}),"".concat((0,x.SB)(e.second.loc,e.second.units))]})})}function P(){let[e,t]=(0,s.useState)(0),[n,i]=(0,s.useState)([0,0]),[a,o]=(0,s.useState)(!1),[c,u]=(0,s.useState)(Math.round(window.innerHeight-.25*window.innerHeight)),m=(0,l.on)(e=>e.metadata),d=m?m.units:"Default",[h,f]=(0,s.useState)(1),[p,x]=(0,s.useState)(1);(0,s.useEffect)(()=>{let e=()=>{let e=Math.round(window.innerHeight-.25*window.innerHeight);u(e),document.documentElement.style.setProperty("--plot-height","".concat(e,"px"))};return window.addEventListener("orientationchange",e),window.addEventListener("resize",e),()=>{window.removeEventListener("orientationchange",e),window.removeEventListener("resize",e)}},[]),(0,s.useEffect)(()=>{document.documentElement.style.setProperty("--plot-height","".concat(c,"px"))},[c]);let v=window.innerHeight-c>=10;return(0,r.jsxs)(r.Fragment,{children:[!v&&(0,r.jsx)(S.de,{onClick:()=>{u(window.innerHeight-60)}}),v&&(0,r.jsxs)("div",{className:"plot-canvas",children:[(0,r.jsx)(M,{}),(0,r.jsx)(z,{pointID:e,pointLoc:n,showPointInfo:a,plotUnits:d}),(0,r.jsx)(S.A,{height:c,setHeight:u}),(0,r.jsx)(S.gj,{scale:h,setScale:f}),(0,r.jsx)(S.LC,{scale:p,setScale:x}),(0,r.jsxs)(w.Hl,{orthographic:!0,camera:{position:[0,0,40]},frameloop:"demand",children:[(0,r.jsx)(I,{height:c,yScale:h,pointSetters:{setPointID:t,setPointLoc:i,setShowPointInfo:o},xScale:p}),(0,r.jsx)(k,{height:c,yScale:h,xScale:p})]}),(0,r.jsx)(A,{})]})]})}var V=n(6511),T=n(634);function k(e){let{colorTicks:t="grey",tickSize:n=4,fontSize:i=14,showGrid:a=!0,gridOpacity:o=.5,height:u,yScale:m=1,xScale:d=1}=e,{camera:h}=(0,f.C)(),[p,v]=(0,s.useState)({left:0,right:0,top:0,bottom:0}),{dimCoords:g,dimArrays:y,plotDim:w,valueScales:S}=(0,l.on)((0,c.k)(e=>({dimCoords:e.dimCoords,dimArrays:e.dimArrays,plotDim:e.plotDim,valueScales:e.valueScales}))),b=y[w],j=b.length,C=S.maxVal-S.minVal,D=(0,s.useMemo)(()=>{let e=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];if(b){if(b.every(e=>"bigint"==typeof e)){let t=g?(0,x.lt)(g.plot.units):1,n=[];for(let r=0;r<b.length;r++){let i=new Date(Number(b[r])*t),a="".concat(i.getDate().toString().padStart(2,"0")," ").concat(e[i.getMonth()],"\n").concat(i.getFullYear());n.push(a)}return n}return b.map(e=>String(e))}},[b,g]),M=(0,s.useMemo)(()=>{let e=window.innerWidth,t=window.innerHeight-u;return{left:-e/2+h.position.x,right:e/2+h.position.x,top:t/2+h.position.y,bottom:-t/2+h.position.y}},[]),[z,A]=(0,s.useState)(h.zoom),P=(0,s.useMemo)(()=>{let e=1/h.zoom;return{tickSize:n*e,fontSize:i/e,labelOffset:n*e}},[h.zoom,n,i]);(0,f.D)(()=>{h.zoom!==z&&A(h.zoom);let e=window.innerWidth/h.zoom,t=(window.innerHeight-u)/h.zoom,n={left:-e/2+h.position.x,right:e/2+h.position.x,top:t/2+h.position.y,bottom:-t/2+h.position.y};JSON.stringify(p)!=JSON.stringify(n)&&v(n)});let k=(0,s.useRef)(null),R=(0,s.useRef)(null);(0,s.useEffect)(()=>(k.current&&clearTimeout(k.current),R.current&&(k.current=setTimeout(()=>{R.current&&R.current.reset()},100)),()=>{null!==k.current&&clearTimeout(k.current)}),[u]);let F=(p.top+p.bottom)/2,N=(p.left+p.right)/2;return(0,r.jsxs)("group",{children:[a&&(0,r.jsxs)(r.Fragment,{children:[Array.from({length:10},(e,n)=>{var i;if(0===n||9===n)return null;let a=+Math.round(p.left/1)+(Math.round(p.right/1)-Math.round(p.left/1))*(n/9),l=a/d/(M.right-M.left)+.5;return(0,r.jsxs)(s.Fragment,{children:[(0,r.jsx)("group",{position:[a,F,0],children:(0,r.jsxs)("line",{children:[(0,r.jsx)("bufferGeometry",{children:(0,r.jsx)("float32BufferAttribute",{attach:"attributes-position",args:[new Float32Array([0,p.top-F,0,0,p.bottom-F,0]),3]})}),(0,r.jsx)("lineDashedMaterial",{color:t,opacity:o,transparent:!0,dashSize:.5,gapSize:.5})]},"vgrid-".concat(n))}),(0,r.jsxs)("group",{position:[a,p.top,0],children:[(0,r.jsxs)("line",{children:[(0,r.jsx)("bufferGeometry",{children:(0,r.jsx)("float32BufferAttribute",{attach:"attributes-position",args:[new Float32Array([0,0,0,0,-P.tickSize,0]),3]})}),(0,r.jsx)("lineBasicMaterial",{color:t})]}),0!==n&&9!==n&&(0,r.jsx)(V.E,{position:[0,P.tickSize/4-P.labelOffset,0],fontSize:P.fontSize/z**2,color:t,anchorX:"center",anchorY:"top",children:null!=(i=null==D?void 0:D[Math.round(l*j-.5)])?i:""})]},"top-tick-".concat(n))]},"vert-group-".concat(n))}),Array.from({length:8},(e,n)=>{if(0===n||7===n)return null;let i=p.bottom+(p.top-p.bottom)*(n/7),a=i/m/(p.top-p.bottom)/z+.5;return(0,r.jsxs)(s.Fragment,{children:[(0,r.jsx)("group",{position:[N,i,0],children:(0,r.jsxs)("line",{children:[(0,r.jsx)("bufferGeometry",{children:(0,r.jsx)("float32BufferAttribute",{attach:"attributes-position",args:[new Float32Array([p.left-N,0,0,p.right-N,0,0]),3]})}),(0,r.jsx)("lineDashedMaterial",{color:t,opacity:o,transparent:!0,dashSize:0,gapSize:.5,linewidth:1})]})},"hgrid-".concat(n)),(0,r.jsxs)("group",{position:[p.right,i,0],children:[(0,r.jsxs)("line",{children:[(0,r.jsx)("bufferGeometry",{children:(0,r.jsx)("float32BufferAttribute",{attach:"attributes-position",args:[new Float32Array([0,0,0,-P.tickSize,0,0]),3]})}),(0,r.jsx)("lineBasicMaterial",{color:t})]}),0!==n&&7!==n&&(0,r.jsx)(V.E,{position:[-P.tickSize-P.labelOffset,0,0],fontSize:P.fontSize/z**2,color:t,anchorX:"right",anchorY:"middle",children:(S.minVal+a*C).toFixed(1)})]},"right-tick-".concat(n))]},"vert-group-".concat(n))})]}),(0,r.jsx)(T.N,{ref:R,enableRotate:!1,enablePan:!0,enableZoom:!0,zoomSpeed:.85,maxDistance:500,maxZoom:20,minZoom:.5})]})}var R=n(12);n(3433);let F=e=>{let{loc:t,show:n,info:i}=e,{dimNames:a,dimUnits:o}=(0,l.on)((0,c.k)(e=>({dimNames:e.dimNames,dimUnits:e.dimUnits}))),u=(0,l.r2)(e=>e.axis),m=(0,s.useMemo)(()=>a.length<3?[a[0],a[1]]:a.filter((e,t)=>t!=u),[a,u]),d=(0,s.useMemo)(()=>a.length<3?[o[0],o[1]]:o.filter((e,t)=>t!=u),[o,u]);return(0,r.jsxs)("div",{className:"analysis-info",style:{left:"".concat(t[0]+10,"px"),top:"".concat(t[1]+10,"px"),display:n?"":"none"},children:["".concat(m[0],": ").concat(n&&(0,x.SB)(i[0],d[0])),(0,r.jsx)("br",{}),"".concat(m[1],": ").concat(n&&(0,x.SB)(i[1],d[1])),(0,r.jsx)("br",{}),"Value: ".concat(Math.round(100*i[2])/100)]})},N=e=>{let{values:t,setShowLoading:n}=e,{setShape:a,setFlipY:o,setValueScales:u,setMetadata:m,setDimArrays:d,setDimNames:h,setDimUnits:f,setPlotOn:x}=(0,l.on)((0,c.k)(e=>({setShape:e.setShape,setFlipY:e.setFlipY,setValueScales:e.setValueScales,setMetadata:e.setMetadata,setDimArrays:e.setDimArrays,setDimNames:e.setDimNames,setDimUnits:e.setDimUnits,setPlotOn:e.setPlotOn}))),{colormap:g,variable:b,isFlat:j,metadata:C,valueScales:D,setIsFlat:M,setDataArray:z}=(0,l.on)((0,c.k)(e=>({colormap:e.colormap,variable:e.variable,isFlat:e.isFlat,metadata:e.metadata,valueScales:e.valueScales,setIsFlat:e.setIsFlat,setDataArray:e.setDataArray}))),{ZarrDS:A,canvasWidth:P}=t,V=(0,l.Ws)(e=>e.plotType),[k,N]=(0,s.useState)(!1),[O,L]=(0,s.useState)([0,0]),_=(0,s.useRef)([0,0]),B=(0,s.useRef)(0),[Y,W]=(0,s.useState)(!1),[U,E]=(0,s.useState)([0,0]),[I,H]=(0,s.useState)(null),[q,Z]=(0,s.useState)(!0),[J,$]=(0,s.useState)(0);(0,s.useEffect)(()=>{$(window.innerWidth);let e=()=>$(window.innerWidth);return window.addEventListener("resize",e),()=>window.removeEventListener("resize",e)},[]),(0,s.useEffect)(()=>{let e=new MutationObserver(e=>{e.forEach(e=>{e.attributeName})});return e.observe(document.documentElement,{attributes:!0,attributeFilter:["data-theme"]}),()=>e.disconnect()},[]),(0,s.useEffect)(()=>{"Default"!=b?(n(!0),Z(!1),A.GetArray(b,[0,10]).then(e=>{let[t,r]=(0,R.oW)({data:e.data,shape:e.shape});t instanceof i.GYF||t instanceof i.dYF?H(t):(console.error("Invalid texture type returned from ArrayToTexture"),H(null)),"object"==typeof r&&"maxVal"in r&&"minVal"in r&&u(r),2==e.shape.length?(M(!0),z(e.data)):M(!1);let o=e.shape[1]/e.shape[2]*2;a(new i.Pq0(2,o,2)),n(!1),Z(!0),x(!0)}),A.GetAttributes(b).then(e=>{m(e);let[t,n,r]=A.GetDimArrays();d(t),h(r),t.length>2?t[1][1]<t[1][0]?o(!0):o(!1):t[0][1]<t[0][0]?o(!0):o(!1);let i=[];for(let e of n)i.push(e.units);f(i)})):m(null)},[b]);let K=(0,s.useMemo)(()=>({setLoc:E,setShowInfo:W,coords:_,val:B}),[]),Q=(0,s.useMemo)(()=>S.Fp,[]);return(0,r.jsxs)("div",{className:"main-canvas",style:{width:J-P},onContextMenu:function(e){j||(L([e.pageX,e.pageY]),N(!0))},children:[q&&(0,r.jsx)(S.PL,{units:null==C?void 0:C.units,valueScales:D}),k&&(0,r.jsx)(S.zs,{loc:O}),(0,r.jsx)(Q,{}),j&&(0,r.jsx)(F,{loc:U,show:Y,info:[..._.current,B.current]}),!j&&(0,r.jsx)(r.Fragment,{children:(0,r.jsxs)(w.Hl,{camera:{position:j?[0,0,5]:[-4.5,3,4.5],fov:50},frameloop:"demand",children:["volume"==V&&q&&(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(p,{volTexture:I}),(0,r.jsx)(v,{ZarrDS:A})]}),"point-cloud"==V&&q&&(0,r.jsx)(r.Fragment,{children:(0,r.jsx)(y,{textures:{texture:I,colormap:g},ZarrDS:A})}),"sphere"==V&&q&&(0,r.jsx)(G,{texture:I,ZarrDS:A}),(0,r.jsx)(T.N,{minPolarAngle:0,maxPolarAngle:Math.PI/2,enablePan:!1,maxDistance:50})]})}),j&&(0,r.jsx)(r.Fragment,{children:(0,r.jsxs)(w.Hl,{camera:{position:[0,0,5],zoom:1e3},frameloop:"demand",orthographic:!0,children:[(0,r.jsx)(X,{texture:I,infoSetters:K}),(0,r.jsx)(T.N,{enableRotate:!1,enablePan:!0,maxDistance:50,minZoom:50,maxZoom:3e3})]})})]})};var O=n(3395);let L=" // by Jeran Poehls\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n    vUv = uv;\r\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\r\n}",_="uniform sampler2D data;\r\nuniform sampler2D cmap;\r\n\r\nuniform float cOffset;\r\nuniform float cScale;\r\n\r\nvarying vec2 vUv;\r\nout vec4 Color;\r\n\r\nvoid main() {\r\n    vec4 val = texture(data,vUv);\r\n    float d = val.x;\r\n    float sampLoc = d == 1. ? d : (d - 0.5)*cScale + 0.5;\r\n    sampLoc = d == 1. ? d : min(sampLoc+cOffset,0.99);\r\n    vec4 color = texture(cmap, vec2(sampLoc,0.5));\r\n    color.a = val.x > 0.999 ? 0. : 1.;\r\n\r\n    Color = color;\r\n}";class B{initAxis(e){let t=this.shape.filter((t,n)=>n!==e);this.GPUCompute=new O.d(t[1],t[0],this.renderer),this.targetAxis=e,this.renderTarget.texture.dispose(),this.renderTarget=this.GPUCompute.createRenderTarget(t[1],t[0],i.ghU,i.ghU,1006,1006),this.renderTarget.texture.format=i.VT0,this.renderTarget.texture.minFilter=i.hxR,this.renderTarget.texture.magFilter=i.hxR,this.renderTarget.texture.needsUpdate=!0}performReduction(e,t){e!=this.targetAxis&&this.initAxis(e);let n=this.GPUCompute.addVariable("reduction",t,this.initTexture);n.material.uniforms.dataArray={value:this.texture},n.material.uniforms.axisSize={value:this.shape[this.targetAxis]},n.material.uniforms.axis={value:this.targetAxis},this.GPUCompute.doRenderTarget(n.material,this.renderTarget);let r=new Float32Array(this.renderTarget.width*this.renderTarget.height);return this.renderer.readRenderTargetPixels(this.renderTarget,0,0,this.renderTarget.width,this.renderTarget.height,r),[this.renderTarget.texture,r]}Mean(e){return this.performReduction(e,"uniform sampler3D dataArray;\nuniform int axis;\nuniform int axisSize;\n\nvoid main() {\n    vec2 uv = gl_FragCoord.xy / resolution.xy;\n\n    vec3 sampleCoord;\n    \n    // Initialize sampling coordinates based on reduction axis\n    if (axis == 0) {\n        // Reduce along depth (D0), uv maps to (s,t) = (D2,D1)\n        sampleCoord = vec3(uv.x, uv.y, 0.0);\n    } else if (axis == 1) {\n        // Reduce along height (D1), uv maps to (s,r) = (D2,D0)\n        sampleCoord = vec3(uv.x, 0.0, uv.y);\n    } else if (axis == 2) {\n        // Reduce along width (D2), uv maps to (t,r) = (D1,D0)\n        sampleCoord = vec3(0.0, uv.x, uv.y);\n    }\n\n    float sum = 0.0;\n    for (int m = 0; m < axisSize; m++) { \n        float coord = (float(m) + 0.5) / float(axisSize); //0.5 for center of pixel\n        // Vary the appropriate coordinate\n        if (axis == 0) {\n            sampleCoord.z = coord; // Vary r (depth)\n        } else if (axis == 1) {\n            sampleCoord.y = coord; // Vary t (height)\n        } else if (axis == 2) {\n            sampleCoord.x = coord; // Vary s (width)\n        }\n        float samp = texture(dataArray, sampleCoord).r;\n        sum += samp == 0.0 ? 0.6 : samp; // Assuming data in red channel\n    }\n    \n    float mean = sum / float(axisSize);\n    gl_FragColor = vec4(mean, 0.0, 0.0, 1.0); // Output mean in red channel\n}")}Max(e){return this.performReduction(e,"uniform sampler3D dataArray;\r\nuniform int axis;\r\nuniform int axisSize;\r\n\r\nvoid main() {\r\n    vec2 uv = gl_FragCoord.xy / resolution.xy;\r\n\r\n    vec3 sampleCoord;\r\n    \r\n    // Initialize sampling coordinates based on reduction axis\r\n    if (axis == 0) {\r\n        // Reduce along depth (D0), uv maps to (s,t) = (D2,D1)\r\n        sampleCoord = vec3(uv.x, uv.y, 0.0);\r\n    } else if (axis == 1) {\r\n        // Reduce along height (D1), uv maps to (s,r) = (D2,D0)\r\n        sampleCoord = vec3(uv.x, 0.0, uv.y);\r\n    } else if (axis == 2) {\r\n        // Reduce along width (D2), uv maps to (t,r) = (D1,D0)\r\n        sampleCoord = vec3(0.0, uv.x, uv.y);\r\n    }\r\n\r\n    float maxVal = 0.0;\r\n    for (int m = 0; m < axisSize; m++) { \r\n        float coord = (float(m) + 0.5) / float(axisSize); //0.5 for center of pixel\r\n        \r\n        // Vary the appropriate coordinate\r\n        if (axis == 0) {\r\n            sampleCoord.z = coord; // Vary r (depth)\r\n        } else if (axis == 1) {\r\n            sampleCoord.y = coord; // Vary t (height)\r\n        } else if (axis == 2) {\r\n            sampleCoord.x = coord; // Vary s (width)\r\n        }\r\n        float sampled = texture(dataArray, sampleCoord).r; // Assuming data in red channel\r\n        maxVal = sampled > maxVal ? sampled : maxVal; \r\n    }\r\n    \r\n    gl_FragColor = vec4(maxVal, 0.0, 0.0, 1.0); // Output mean in red channel\r\n}")}Min(e){return this.performReduction(e,"uniform sampler3D dataArray;\r\nuniform int axis;\r\nuniform int axisSize;\r\n\r\nvoid main() {\r\n    vec2 uv = gl_FragCoord.xy / resolution.xy;\r\n\r\n    vec3 sampleCoord;\r\n    \r\n    // Initialize sampling coordinates based on reduction axis\r\n    if (axis == 0) {\r\n        // Reduce along depth (D0), uv maps to (s,t) = (D2,D1)\r\n        sampleCoord = vec3(uv.x, uv.y, 0.0);\r\n    } else if (axis == 1) {\r\n        // Reduce along height (D1), uv maps to (s,r) = (D2,D0)\r\n        sampleCoord = vec3(uv.x, 0.0, uv.y);\r\n    } else if (axis == 2) {\r\n        // Reduce along width (D2), uv maps to (t,r) = (D1,D0)\r\n        sampleCoord = vec3(0.0, uv.x, uv.y);\r\n    }\r\n\r\n    float minVal = 1.0e15; //BigNum\r\n    for (int m = 0; m < axisSize; m++) { \r\n        float coord = (float(m) + 0.5) / float(axisSize); //0.5 for center of pixel\r\n        \r\n        // Vary the appropriate coordinate\r\n        if (axis == 0) {\r\n            sampleCoord.z = coord; // Vary r (depth)\r\n        } else if (axis == 1) {\r\n            sampleCoord.y = coord; // Vary t (height)\r\n        } else if (axis == 2) {\r\n            sampleCoord.x = coord; // Vary s (width)\r\n        }\r\n        float sampled = texture(dataArray, sampleCoord).r; // Assuming data in red channel\r\n        minVal = sampled < minVal ? sampled : minVal; \r\n    }\r\n    \r\n    gl_FragColor = vec4(minVal, 0.0, 0.0, 1.0); // Output mean in red channel\r\n}")}StDev(e){return this.performReduction(e,"uniform sampler3D dataArray;\r\nuniform int axis;\r\nuniform int axisSize;\r\n\r\nvoid main() {\r\n    vec2 uv = gl_FragCoord.xy / resolution.xy;\r\n\r\n    vec3 sampleCoord;\r\n    \r\n    // Initialize sampling coordinates based on reduction axis\r\n    if (axis == 0) {\r\n        // Reduce along depth (D0), uv maps to (s,t) = (D2,D1)\r\n        sampleCoord = vec3(uv.x, uv.y, 0.0);\r\n    } else if (axis == 1) {\r\n        // Reduce along height (D1), uv maps to (s,r) = (D2,D0)\r\n        sampleCoord = vec3(uv.x, 0.0, uv.y);\r\n    } else if (axis == 2) {\r\n        // Reduce along width (D2), uv maps to (t,r) = (D1,D0)\r\n        sampleCoord = vec3(0.0, uv.x, uv.y);\r\n    }\r\n\r\n    float sum = 0.0;\r\n    for (int m = 0; m < axisSize; m++) { \r\n        float coord = (float(m) + 0.5) / float(axisSize); //0.5 for center of pixel\r\n        \r\n        // Vary the appropriate coordinate\r\n        if (axis == 0) {\r\n            sampleCoord.z = coord; // Vary r (depth)\r\n        } else if (axis == 1) {\r\n            sampleCoord.y = coord; // Vary t (height)\r\n        } else if (axis == 2) {\r\n            sampleCoord.x = coord; // Vary s (width)\r\n        }\r\n        \r\n        sum += texture(dataArray, sampleCoord).r; // Assuming data in red channel\r\n    }\r\n    \r\n    float mean = sum / float(axisSize);\r\n\r\n\r\n    float squaredDiffSum = 0.0;\r\n\r\n    for (int m = 0; m < axisSize; m++) { \r\n        float coord = (float(m) + 0.5) / float(axisSize); //0.5 for center of pixel\r\n        \r\n        // Vary the appropriate coordinate\r\n        if (axis == 0) {\r\n            sampleCoord.z = coord; // Vary r (depth)\r\n        } else if (axis == 1) {\r\n            sampleCoord.y = coord; // Vary t (height)\r\n        } else if (axis == 2) {\r\n            sampleCoord.x = coord; // Vary s (width)\r\n        }\r\n\r\n        float diff = mean - texture(dataArray, sampleCoord).r;\r\n\r\n        squaredDiffSum += pow(diff,2.); // Assuming data in red channel\r\n    }\r\n    float stdev = sqrt(squaredDiffSum / float(axisSize));\r\n\r\n    gl_FragColor = vec4(stdev, 0.0, 0.0, 1.0); // Output mean in red channel\r\n}")}dispose(){var e;null==(e=this.texture)||e.dispose(),this.renderTarget.texture.dispose(),this.initTexture.dispose()}constructor(e,t,n){this.shape=e.shape,this.renderer=t,this.GPUCompute=new O.d(10,10,this.renderer),this.initTexture=this.GPUCompute.createTexture(),this.targetAxis=5,this.renderTarget=this.GPUCompute.createRenderTarget(10,10,i.ghU,i.ghU,1006,1006);let r=e.shape[0]*e.shape[1]*e.shape[2],a=new Uint8Array(r),{minVal:o,maxVal:s}=n;for(let t=0;t<r;t++){let n=(e.data[t]-o)/(s-o)*254;a[t]=isNaN(e.data[t])?255:n}this.texture=new i.dYF(a,this.shape[2],this.shape[1],this.shape[0]),this.texture.format=i.VT0,this.texture.minFilter=i.hxR,this.texture.magFilter=i.hxR,this.texture.needsUpdate=!0}}class Y{initAxis(e){let t=this.shape.filter((t,n)=>n!==e);this.GPUCompute=new O.d(t[1],t[0],this.renderer),this.targetAxis=e,this.renderTarget=this.GPUCompute.createRenderTarget(t[1],t[0],i.ghU,i.ghU,1006,1006),this.renderTarget.texture.format=i.VT0,this.renderTarget.texture.minFilter=i.hxR,this.renderTarget.texture.magFilter=i.hxR,this.renderTarget.texture.needsUpdate=!0}performReduction(e,t){e!==this.targetAxis&&this.initAxis(e);let n=this.GPUCompute.addVariable("reduction",t,this.initTexture);n.material.uniforms.dataArray1={value:this.textureOne},n.material.uniforms.dataArray2={value:this.textureTwo},n.material.uniforms.axisSize={value:this.shape[this.targetAxis]},n.material.uniforms.axis={value:this.targetAxis},this.GPUCompute.doRenderTarget(n.material,this.renderTarget);let r=new Float32Array(this.renderTarget.width*this.renderTarget.height*4);return this.renderer.readRenderTargetPixels(this.renderTarget,0,0,this.renderTarget.width,this.renderTarget.height,r),[this.renderTarget.texture,r]}Correlate(e){return this.performReduction(e,"uniform sampler3D dataArray1;\r\nuniform sampler3D dataArray2;\r\nuniform int axis;\r\nuniform int axisSize;\r\n\r\n\r\n\r\nvoid main() {\r\n    vec2 uv = gl_FragCoord.xy / resolution.xy;\r\n    vec3 sampleCoord;\r\n    \r\n    if (axis == 0) {\r\n        sampleCoord = vec3(uv.x, uv.y, 0.0);\r\n    } else if (axis == 1) {\r\n        sampleCoord = vec3(uv.x, 0.0, uv.y);\r\n    } else if (axis == 2) {\r\n        sampleCoord = vec3(0.0, uv.x, uv.y);\r\n    }\r\n\r\n    float sumX = 0.0;\r\n    float sumY = 0.0;\r\n    float sumXX = 0.0;\r\n    float sumYY = 0.0;\r\n    float sumXY = 0.0;\r\n\r\n    for (int m = 0; m < axisSize; m++) {\r\n        float coord = (float(m) + 0.5) / float(axisSize);\r\n        if (axis == 0) {\r\n            sampleCoord.z = coord;\r\n        } else if (axis == 1) {\r\n            sampleCoord.y = coord;\r\n        } else if (axis == 2) {\r\n            sampleCoord.x = coord;\r\n        }\r\n        float X_i = texture(dataArray1, sampleCoord).r;\r\n        float Y_i = texture(dataArray2, sampleCoord).r;\r\n        sumX += X_i;\r\n        sumY += Y_i;\r\n        sumXX += X_i * X_i;\r\n        sumYY += Y_i * Y_i;\r\n        sumXY += X_i * Y_i;\r\n    }\r\n\r\n    float N = float(axisSize);\r\n    float meanX = sumX / N;\r\n    float meanY = sumY / N;\r\n    float varX = (sumXX / N) - (meanX * meanX);\r\n    float varY = (sumYY / N) - (meanY * meanY);\r\n    float covXY = (sumXY / N) - (meanX * meanY);\r\n    float sigmaX = sqrt(max(0.0, varX));\r\n    float sigmaY = sqrt(max(0.0, varY));\r\n    float epsilon = 1e-6;\r\n    float denominator = sigmaX * sigmaY + epsilon;\r\n    float correlation = covXY / denominator;\r\n\r\n    float newCorrelation = (correlation + 1.)/2.;\r\n\r\n    gl_FragColor = vec4(newCorrelation, 0.0, 0.0, 1.0);\r\n    \r\n}")}dispose(){var e,t;null==(e=this.textureOne)||e.dispose(),null==(t=this.textureTwo)||t.dispose(),this.renderTarget.texture.dispose(),this.initTexture.dispose()}constructor(e,t,n){let{firstArray:r,secondArray:a}=e;this.shape=r.shape,this.renderer=t,this.GPUCompute=new O.d(10,10,this.renderer),this.initTexture=this.GPUCompute.createTexture(),this.targetAxis=5,this.renderTarget=this.GPUCompute.createRenderTarget(10,10,i.ghU,i.ghU,1006,1006);let o=r.shape[0]*r.shape[1]*r.shape[2],s=new Uint8Array(o),{minVal:l,maxVal:c}=n.firstArray;for(let e=0;e<o;e++){let t=(r.data[e]-l)/(c-l)*254;s[e]=isNaN(r.data[e])?255:t}this.textureOne=new i.dYF(s,this.shape[2],this.shape[1],this.shape[0]),this.textureOne.format=i.VT0,this.textureOne.minFilter=i.hxR,this.textureOne.magFilter=i.hxR,this.textureOne.needsUpdate=!0;let u=new Uint8Array(o);l=n.secondArray.minVal,c=n.secondArray.maxVal;for(let e=0;e<o;e++){let t=(a.data[e]-l)/(c-l)*254;u[e]=isNaN(a.data[e])?255:t}this.textureTwo=new i.dYF(u,this.shape[2],this.shape[1],this.shape[0]),this.textureTwo.format=i.VT0,this.textureTwo.minFilter=i.hxR,this.textureTwo.magFilter=i.hxR,this.textureTwo.needsUpdate=!0}}let W=e=>{let{arrays:t,values:n,setters:a}=e,{setShowInfo:o,setLoc:u,uv:m,setVal:d}=a,{colormap:h,flipY:p}=(0,l.on)((0,c.k)(e=>({colormap:e.colormap,flipY:e.flipY}))),{stateVars:x,valueScales:v}=n,{firstArray:g,secondArray:y}=t,{axis:w,operation:S,execute:b}=x,j=g.shape,[C,D]=(0,s.useState)(j.filter((e,t)=>t!==w)),{gl:M}=(0,f.C)(),z=(0,s.useRef)(!1),A=(0,s.useRef)(new Float32Array(0)),{cScale:P,cOffset:V}=(0,l.Ws)((0,c.k)(e=>({cScale:e.cScale,cOffset:e.cOffset}))),T=(0,s.useMemo)(()=>y?new Y({firstArray:g,secondArray:y},M,v):new B(g,M,v.firstArray),[g,y]),[k,R]=(0,s.useState)(null),F=new i.BKk({glslVersion:i.Wdf,uniforms:{cScale:{value:P},cOffset:{value:V},data:{value:k},cmap:{value:h}},vertexShader:L,fragmentShader:_,side:i.$EB});(0,s.useEffect)(()=>{if(g){let e=null;if(y&&T instanceof Y)[e,A.current]=T.Correlate(w);else switch(S){case"Max":[e,A.current]=T instanceof B?T.Max(w):[null,A.current];break;case"Min":[e,A.current]=T instanceof B?T.Min(w):[null,A.current];break;case"Mean":[e,A.current]=T instanceof B?T.Mean(w):[null,A.current];break;case"StDev":[e,A.current]=T instanceof B?T.StDev(w):[null,A.current];break;default:e=k}R(e),D(j.filter((e,t)=>t!==w))}},[b,w,y,g,S]);let N=(0,s.useMemo)(()=>p?-(C[0]/C[1]*2):C[0]/C[1]*2,[p,C]);(0,s.useEffect)(()=>{T&&T.dispose()},[g,y]);let O=(0,s.useRef)(null),W=(0,s.useCallback)(e=>{if(z.current&&e.uv){O.current=e,u([e.clientX,e.clientY]);let{x:t,y:n}=e.uv;m.current=[t,n];let r=Math.round(C[0]*n-.5),i=Math.round(C[1]*t-.5),a=C[1]*r+i,o=A.current[a];y||"StDev"===S?d(o):d(function(e,t){return e*(t.maxVal-t.minVal)+t.minVal}(o,v.firstArray))}},[g,y,w,S,C]),U=(0,s.useMemo)(()=>new i.bdM(2,N),[N]);return(0,s.useEffect)(()=>{U.dispose()},[U]),(0,r.jsx)("mesh",{material:F,onPointerEnter:()=>{o(!0),z.current=!0},onPointerLeave:()=>{o(!1),z.current=!1},onPointerMove:W,geometry:U,rotation:[0,0,2==w?Math.PI/2:0]})};function U(e){let{values:t}=e,{dimNames:n,dimArrays:i,dimUnits:a,variables:o,setDimNames:u,setDimArrays:m,setDimUnits:d}=(0,l.on)((0,c.k)(e=>({dimNames:e.dimNames,dimArrays:e.dimArrays,dimUnits:e.dimUnits,variables:e.variables,setDimNames:e.setDimNames,setDimArrays:e.setDimArrays,setDimUnits:e.setDimUnits}))),{axis:h,operation:f,variable1:p,variable2:v,execute:g}=(0,l.r2)((0,c.k)(e=>({axis:e.axis,operation:e.operation,variable1:e.variable1,variable2:e.variable2,execute:e.execute}))),{ZarrDS:y,canvasWidth:b}=t,j=(0,s.useRef)({}),C=(0,l.on)(e=>e.setFlipY),[D,M]=(0,s.useState)([0,100]),[z,A]=(0,s.useState)([0,100]),[P,V]=(0,s.useState)(null),[k,R]=(0,s.useState)(null),[N,O]=(0,s.useState)(!1),[L,_]=(0,s.useState)([0,0]),B=(0,s.useRef)([0,0]),[Y,U]=(0,s.useState)(0),E=(0,s.useRef)([0,0]),[I,X]=(0,s.useState)("Default");(0,s.useMemo)(()=>n.map((e,t)=>({text:e,value:t})),[]);let G=(0,s.useMemo)(()=>({operation:f,axis:h,execute:g}),[f,h,g]);(0,s.useEffect)(()=>{"Default"!==p&&(y.GetArray(p,[0,10]).then(e=>{if(V(e),p in j.current)M([j.current[p].min,j.current[p].max]);else{let[t,n]=(0,x.ArrayMinMax)(e.data);M([n,t]),j.current[p]={min:t,max:n}}}),y.GetAttributes(p).then(e=>{X(e.units);let[t,n,r]=y.GetDimArrays();m(t),u(r);let i=[];for(let e of n)i.push(e.units);d(i),t[1][1]<t[1][0]?C(!0):C(!1)})),"Default"!==v&&y.GetArray(v,[0,10]).then(e=>{if(R(e),v in j.current)A([j.current[v].min,j.current[v].max]);else{let[t,n]=(0,x.ArrayMinMax)(e.data);A([t,n]),j.current[v]={min:t,max:n}}}),"Default"===v&&R(null)},[p,v,h]);let H=(0,s.useMemo)(()=>3===i.length?i.filter((e,t)=>t!=h):i,[h,i]);(0,s.useEffect)(()=>{if(i){let e=H[1].length,t=H[0].length,n=Math.round(B.current[0]*e-.5),r=Math.round(B.current[1]*t-.5);E.current=[H[0][r],H[1][n]]}},[B,L,H]);let q=(0,s.useMemo)(()=>({firstArray:{maxVal:D[1],minVal:D[0]},secondArray:{maxVal:z[1],minVal:z[0]}}),[D,z]),Z=(0,s.useMemo)(()=>({stateVars:G,valueScales:q}),[G,q]),J=(0,s.useMemo)(()=>S.pH,[]);return(0,r.jsxs)("div",{className:"analysis-canvas",style:{width:b},children:[P&&(0,r.jsx)(S.PL,{units:I,valueScales:k?{maxVal:1,minVal:0}:{maxVal:D[0],minVal:D[1]}}),(0,r.jsx)(J,{}),(0,r.jsx)(F,{loc:L,show:N,info:[...E.current,Y]}),(0,r.jsxs)(w.Hl,{camera:{position:[0,0,50],zoom:400},orthographic:!0,children:[P&&(0,r.jsx)(W,{arrays:{firstArray:P,secondArray:k},values:Z,setters:{setShowInfo:O,setLoc:_,uv:B,setVal:U}}),(0,r.jsx)(T.N,{enablePan:!0,enableRotate:!1})]})]})}function E(e){let{points:t,pointSetters:n,scalers:a}=e,o=(0,s.useRef)(null),u=t.length,m=(0,s.useRef)(null),[d,h]=(0,s.useState)(!1),{setPointID:p,setPointLoc:x,setShowPointInfo:v}=n,[g,y]=(0,s.useState)(1),{pointColor:w,pointSize:S}=(0,l.Ws)((0,c.k)(e=>({pointColor:e.pointColor,pointSize:e.linePointSize}))),{xScale:b,yScale:j}=a,C=(0,s.useMemo)(()=>new i.Gu$(S),[S]),D=(0,s.useMemo)(()=>new i.V9B({color:w}),[w]);return(0,s.useEffect)(()=>{if(o.current){let e=new i.B69;for(let n=0;n<u;n++){let r=t[n].toArray();e.position.set(r[0]*(b/2),r[1]*j,1),e.scale.set(S/g,S/g,S/g),e.updateMatrix(),o.current.setMatrixAt(n,e.matrix)}o.current.instanceMatrix.needsUpdate=!0}},[t,g,C,D,b,j,S]),(0,f.D)(e=>{let{camera:t}=e;t.zoom!==g&&y(t.zoom)}),(0,r.jsx)(r.Fragment,{children:(0,r.jsx)("mesh",{position:[0,0,5],onPointerEnter:function(e){if(o.current){let t=e.instanceId,n=new i.B69,r=new i.kn4,a=new i.Pq0;t!=m.current&&m.current&&(o.current.getMatrixAt(m.current,r),a.setFromMatrixPosition(r),n.scale.set(S/g,S/g,S/g),n.position.copy(a),n.updateMatrix(),o.current.setMatrixAt(m.current,n.matrix)),m.current=t,o.current.getMatrixAt(t,r),a.setFromMatrixPosition(r),n.scale.set(3*S/g,3*S/g,3/g),n.position.copy(a),n.updateMatrix(),o.current.setMatrixAt(e.instanceId,n.matrix),o.current.instanceMatrix.needsUpdate=!0,h(e=>!e),p(e.instanceId),x([e.clientX,e.clientY]),v(!0)}},onPointerLeave:function(e){let t=e.instanceId;if(o.current){let e=new i.B69,n=new i.kn4,r=new i.Pq0;m.current&&(o.current.getMatrixAt(t,n),r.setFromMatrixPosition(n),e.scale.set(S/g,S/g,S/g),e.position.copy(r),e.updateMatrix(),o.current.setMatrixAt(t,e.matrix),o.current.instanceMatrix.needsUpdate=!0,h(e=>!e),v(t!=m.current))}},children:(0,r.jsx)("instancedMesh",{ref:o,args:[C,D,u]})})})}let I=e=>{let{height:t,xScale:n,yScale:a,pointSetters:o}=e,{valueScales:u,timeSeries:m,colormap:d}=(0,l.on)((0,c.k)(e=>({valueScales:e.valueScales,timeSeries:e.timeSeries,colormap:e.colormap}))),{lineWidth:h,useLineColor:p,lineColor:x,showPoints:v,lineResolution:g}=(0,l.Ws)((0,c.k)(e=>({lineWidth:e.lineWidth,linePointSize:e.linePointSize,showPoints:e.showPoints,useLineColor:e.useLineColor,lineColor:e.lineColor,lineResolution:e.lineResolution}))),{camera:y}=(0,f.C)(),w=(0,s.useMemo)(()=>new i.Q1f(x),[x]),{maxVal:S,minVal:b}=u,j=new i.BKk({glslVersion:i.Wdf,uniforms:{cmap:{value:d},width:{value:h},xScale:{value:n},yScale:{value:a},aspect:{value:window.innerWidth/window.innerHeight},thickness:{value:h},miter:{value:1},useLineColor:{value:p},lineColor:{value:w},zoom:{value:y.zoom}},vertexShader:"attribute float direction; \nattribute vec3 next;\nattribute vec3 previous;\nattribute float normed;\n\n\nvarying float vNormed;\n\nuniform float zoom;\nuniform float thickness;\nuniform int miter;\nuniform float xScale; \nuniform float yScale;\n\nfloat getOrthographicZoom(mat4 projectionMatrix, float referenceWidth) {\n    float m0 = projectionMatrix[0][0]; // Scaling factor: 2/(right-left)\n    float viewWidth = 2.0 / m0; // Viewable width\n    return referenceWidth / viewWidth; // Zoom level\n}\n\nvoid main() {\n    vec3 pos = position;\n    vec3 prev = previous;\n    vec3 nex = next;\n    pos.x *= xScale/2.0;\n    pos.y *= yScale;\n    prev.x *= xScale/2.0;\n    prev.y *= yScale;\n    nex.x *= xScale/2.0;\n    nex.y *= yScale;\n\n    // Transform positions to view space (before projection)\n    float zoom = getOrthographicZoom(projectionMatrix, 2.);\n    float zoomLevel = 2. / projectionMatrix[0][0]; // Extract vertical scale\n    vec4 currentView = modelViewMatrix * vec4(pos, 1.0);\n    vec4 prevView = modelViewMatrix * vec4(prev, 1.0);\n    vec4 nextView = modelViewMatrix * vec4(nex, 1.0);\n\n    // Compute directions in view space\n    vec3 dir = vec3(0.0);\n    if (currentView.xyz == prevView.xyz) {\n        dir = normalize(nextView.xyz - currentView.xyz);\n    } else if (currentView.xyz == nextView.xyz) {\n        dir = normalize(currentView.xyz - prevView.xyz);\n    } else {\n        vec3 dirA = normalize(currentView.xyz - prevView.xyz);\n        if (miter == 1) {\n            vec3 dirB = normalize(nextView.xyz - currentView.xyz);\n            vec3 tangent = normalize(dirA + dirB);\n            vec3 perp = vec3(-dirA.y, dirA.x, 0.0); // Perpendicular in view space\n            vec3 miterVec = vec3(-tangent.y, tangent.x, 0.0);\n            float miterLen = dot(miterVec, perp);\n            miterLen = max(miterLen, 0.5); // Avoid division by zero\n            dir = tangent;\n        } else {\n            dir = dirA;\n        }\n    }\n\n    // Compute normal in view space\n    vec3 normal = vec3(-dir.y, dir.x, 0.0); // Perpendicular to direction\n    float len = thickness / zoom/500.; // Thickness in world/view space units\n    normal *= 0.5 * len * direction; // Apply thickness and direction\n\n    // Apply offset in view space\n    currentView.xyz += normal;\n\n    // Project to clip space\n    gl_Position = projectionMatrix * currentView;\n\n\n    vNormed = normed;\n    gl_PointSize = 1.0;\n}",fragmentShader:"\n                out vec4 Color;\n                uniform sampler2D cmap;\n								uniform bool useLineColor;\n        				uniform vec3 lineColor;\n                varying float vNormed;\n\n                void main() {\n                    vec4 texColor = texture(cmap, vec2(vNormed, 0.1));\n                    texColor.a = 1.;\n                    Color = useLineColor ? vec4(lineColor, 1.0) : texColor;\n                }\n                ",depthWrite:!1}),C=(0,s.useMemo)(()=>m.map(e=>(e-b)/(S-b)),[m]),D=(0,s.useMemo)(()=>{let e=window.innerWidth,n=window.innerHeight-t,r=function(e,t,n){let r=(t-e)/(n-1);return Array.from({length:n},(t,n)=>e+r*n)}(-e,e,m.length);return C.map((e,t)=>new i.Pq0(r[t],(e-.5)*n,5))},[m,t]),M=(0,s.useMemo)(()=>new i.B6O(D).getPoints(D.length*g-1),[D,g]),z=(0,s.useMemo)(()=>{if(C.length<2)return[];let e=[];for(let t=0;t<M.length;t++){let n=t/(M.length-1)*(C.length-1),r=Math.floor(n),i=Math.min(C.length-1,Math.ceil(n)),a=n-r;e.push(C[r]*(1-a)+C[i]*a)}return e},[C,M.length]),A=(0,s.useMemo)(()=>{if(M.length<2)return new i.LoY;let e=M.length,t=[],n=[],r=[],a=[],o=[],s=[];for(let i=0;i<e;i++){let s=M[i],l=M[Math.max(0,i-1)],c=M[Math.min(e-1,i+1)];t.push(...s,...s),n.push(1,-1),r.push(...l,...l),a.push(...c,...c),o.push(z[i],z[i])}for(let t=0;t<e-1;t++){let e=2*t,n=e+1,r=e+2,i=e+3;s.push(e,n,r),s.push(n,i,r)}let l=new i.LoY;return l.setAttribute("position",new i.qtW(t,3)),l.setAttribute("direction",new i.qtW(n,1)),l.setAttribute("previous",new i.qtW(r,3)),l.setAttribute("next",new i.qtW(a,3)),l.setAttribute("normed",new i.qtW(o,1)),l.setIndex(new i.A$4(s,1)),l},[M]);return(0,r.jsx)(r.Fragment,{children:(0,r.jsxs)("group",{children:[A&&(0,r.jsx)("mesh",{geometry:A,material:j}),v&&(0,r.jsx)(E,{points:D,pointSetters:o,scalers:{xScale:n,yScale:a}})]})})},X=e=>{let{texture:t,infoSetters:n}=e,{setLoc:a,setShowInfo:o,val:u,coords:m}=n,{shape:d,flipY:h,colormap:f,dataArray:p,valueScales:x,dimArrays:v}=(0,l.on)((0,c.k)(e=>({shape:e.shape,flipY:e.flipY,colormap:e.colormap,dataArray:e.dataArray,valueScales:e.valueScales,dimArrays:e.dimArrays}))),{cScale:g,cOffset:y}=(0,l.Ws)((0,c.k)(e=>({cOffset:e.cOffset,cScale:e.cScale}))),w=(0,s.useMemo)(()=>d.x/d.z,[d]),S=(0,s.useMemo)(()=>new i.bdM(2,w),[w]),b=(0,s.useRef)(!1),j=new i.BKk({glslVersion:i.Wdf,uniforms:{cScale:{value:g},cOffset:{value:y},data:{value:t},cmap:{value:f}},vertexShader:L,fragmentShader:_,side:i.$EB});(0,s.useEffect)(()=>{S.dispose()},[S]);let C=(0,s.useRef)(null),D=(0,s.useCallback)(e=>{if(b.current&&e.uv){C.current=e,a([e.clientX,e.clientY]);let{x:t,y:n}=e.uv,r=v[1].length,i=v[0].length,o=Math.round(t*r-.5),s=Math.round(n*i-.5);u.current=function(e,t){return e*(t.maxVal-t.minVal)+t.minVal}(p?p[r*s+o]:0,x),m.current=[v[0][s],v[1][o]]}},[p,d,v]);return(0,r.jsx)(r.Fragment,{children:(0,r.jsx)("mesh",{material:j,geometry:S,scale:[1,h?-1:1,1],onPointerEnter:()=>{o(!0),b.current=!0},onPointerLeave:()=>{o(!1),b.current=!1},onPointerMove:D})})},G=e=>{let{texture:t,ZarrDS:n}=e,{colormap:a,flipY:o}=(0,l.on)((0,c.k)(e=>({colormap:e.colormap,flipY:e.flipY}))),{setTimeSeries:u,setPlotDim:m,setDimCoords:d}=(0,l.on)((0,c.k)(e=>({setTimeSeries:e.setTimeSeries,setPlotDim:e.setPlotDim,setDimCoords:e.setDimCoords}))),{dimArrays:p,dimNames:v,dimUnits:g}=(0,l.on)((0,c.k)(e=>({shape:e.shape,dimArrays:e.dimArrays,dimNames:e.dimNames,dimUnits:e.dimUnits}))),{animate:y,cOffset:w,cScale:S,resetAnim:b,selectTS:j}=(0,l.Ws)((0,c.k)(e=>({animate:e.animate,cOffset:e.cOffset,cScale:e.cScale,resetAnim:e.resetAnim,selectTS:e.selectTS}))),[C,D]=(0,s.useState)(null),M=(0,s.useMemo)(()=>{let{height:e,width:n}=null==t?void 0:t.source.data;if(C){let t=Math.round(C.x*n)+.5,r=Math.round(C.y*e)+.5,a=1/n,o=1/e;return new i.IUQ(...[t/n-a/2,t/n+a/2],...[r/e-o/2,r/e+o/2])}return new i.I9Y(n,e)},[t,C]),[z,A]=(0,s.useState)(0),P=(0,s.useMemo)(()=>new i.WBB(1,9),[]),V=(0,s.useMemo)(()=>new i.BKk({glslVersion:i.Wdf,uniforms:{map:{value:t},selectTS:{value:j},selectBounds:{value:M},cmap:{value:a},cOffset:{value:w},cScale:{value:S},animateProg:{value:z}},vertexShader:h,fragmentShader:" // by Jeran Poehls\nprecision highp float;\nprecision highp sampler3D;\n\nout vec4 color;\n\nin vec3 aPosition;\n\nuniform sampler3D map;\nuniform sampler2D cmap;\n\nuniform float cOffset;\nuniform float cScale;\nuniform float animateProg;\nuniform vec4 selectBounds; \nuniform bool selectTS;\n\n#define pi 3.141592653\n\nvec2 giveUV(vec3 position){\n    vec3 n = normalize(position);\n    float latitude = asin(n.y);\n    float longitude = atan(n.z, n.x);\n    vec2 uv = vec2(-longitude/(pi), latitude/(pi/2.0));\n    uv /= 2.;\n    uv += 0.5;\n    return uv;\n}\n\n\nvoid main(){\n    vec2 sampleCoord = giveUV(aPosition);\n    float strength = texture(map, vec3(sampleCoord, animateProg)).r;\n    strength = strength == 1. ? strength : (strength - 0.5)*cScale + 0.5;\n    strength = strength == 1. ? strength : min(strength+cOffset,0.99);\n    color = texture(cmap, vec2(strength, 0.5));\n    bool cond = (sampleCoord.x < selectBounds.r || sampleCoord.x > selectBounds.g || sampleCoord.y < selectBounds.b ||  sampleCoord.y > selectBounds.a);\n    if (cond && selectTS){\n        color.rgb *= 0.65;\n    }\n    color.a = 1.;\n    // color = vec4(sampleCoord, 0., 1.0);\n\n}",blending:i.NTi}),[t,z,a,w,S,y,M,j]);return(0,f.D)(()=>{y&&A((z+.001)%1)}),(0,s.useEffect)(()=>{A(0)},[b]),(0,r.jsx)(r.Fragment,{children:(0,r.jsx)("mesh",{geometry:P,material:V,scale:[1,o?-1:1,1],onClick:e=>j&&function(e){let r=function(e,t,n){let r=Math.atan2(e.z,e.x),a=Math.asin(e.y),o=(r+Math.PI)/(2*Math.PI),s=(a+Math.PI/2)/Math.PI;return o=Math.round((o=1-o)*t-.5)/t,s=Math.round(s*n-.5)/n,new i.I9Y(o,s)}(e.point.normalize(),null==t?void 0:t.source.data.width,null==t?void 0:t.source.data.height),a=new i.Pq0(0,0,1);if(n){var o,s;n.GetTimeSeries({uv:r,normal:a}).then(e=>u(e));let e=a.toArray().map((e,t)=>Math.abs(e)>0?t:null).filter(e=>null!==e);m(2-e[0]);let t=(0,x.jT)({normal:a,uv:r}).map((e,t)=>e?p[t][Math.round(e*p[t].length)]:null),i=v.filter((e,n)=>null!==t[n]),l=g.filter((e,n)=>null!==t[n]);t=t.filter(e=>null!==e),d({first:{name:i[0],loc:null!=(o=t[0])?o:0,units:l[0]},second:{name:i[1],loc:null!=(s=t[1])?s:0,units:l[1]},plot:{units:g[2-e[0]]}})}D(r)}(e)})})};i.l2R.enabled=!0;let H=function(){let{initStore:e,setZMeta:t}=(0,l.on)((0,c.k)(e=>({initStore:e.initStore,setZMeta:e.setZMeta}))),n=(0,s.useMemo)(()=>new o.Y5(e),[e]),[i,u]=(0,s.useState)({});(0,s.useEffect)(()=>{let n=!0;(0,a.tz)((0,o.Oe)(e)).then(e=>{n&&u(e)});let r=(0,o.Oe)(e),i=(0,a.Tk)(r),s=(0,a.Bi)(i);return i.then(e=>t(e)),s.then(e=>{m(e)}),()=>{n=!1}},[e]);let{setVariables:m,setPlotOn:h,timeSeries:f,variable:p,metadata:x,plotOn:v}=(0,l.on)((0,c.k)(e=>({setVariables:e.setVariables,setPlotOn:e.setPlotOn,timeSeries:e.timeSeries,variable:e.variable,metadata:e.metadata,plotOn:e.plotOn}))),[g,y]=(0,s.useState)(!1),[w,b]=(0,s.useState)(window.innerWidth);(0,s.useEffect)(()=>{let e=()=>b(window.innerWidth);return window.addEventListener("resize",e),()=>window.removeEventListener("resize",e)},[]);let[j,C]=(0,s.useState)(0);(0,s.useEffect)(()=>{C(Math.round(0*window.innerWidth))},[]);let D=(0,s.useMemo)(()=>({ZarrDS:n,canvasWidth:j}),[n,j]),M=(0,s.useMemo)(()=>({values:{ZarrDS:n,canvasWidth:j}}),[n,j]);return(0,s.useEffect)(()=>{"Default"===p&&(C(0),h(!1))},[p]),(0,r.jsxs)(r.Fragment,{children:[!v&&(0,r.jsx)(S.Fp,{}),j<15&&"Default"!=p&&(0,r.jsx)(S.kW,{onClick:()=>C(.5*w)}),j>w-15&&"Default"!=p&&(0,r.jsx)(S.h7,{onClick:()=>C(.5*w)}),j>15&&j<w-15&&(0,r.jsx)(S.t2,{canvasWidth:j,setCanvasWidth:C}),(0,r.jsx)(S.Rh,{showLoading:g}),j>10&&"Default"!=p&&(0,r.jsx)(U,{values:M.values}),"Default"===p&&(0,r.jsx)(d,{}),"Default"!=p&&j<w-15&&(0,r.jsx)(N,{values:D,setShowLoading:y}),x&&(0,r.jsx)(S.OS,{data:x}),f.length>2&&(0,r.jsx)(P,{})]})}},3040:()=>{},3433:()=>{},8947:()=>{}},e=>{var t=t=>e(e.s=t);e.O(0,[154,910,285,383,458,667,217,935,587,195,970,984,269,543,29,112,831,78,358],()=>t(1700)),_N_E=e.O()}]);